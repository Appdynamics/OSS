<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		   label="{company.id>0?company.name:'New Company'}" xmlns:local="*">

	<fx:Metadata>
        [Event(name="companyCreated", type="CompanyEvent")]
        [Event(name="companyUpdated", type="CompanyEvent")]
        [Event(name="companyDeleted", type="CompanyEvent")]
    </fx:Metadata>
	
	<fx:Script>
		<![CDATA[

		import mx.collections.ArrayCollection;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		import mx.controls.Alert;
		
		[Bindable] public var company:Company;
		[Bindable] public var industries:ArrayCollection;

		private function save():void
		{
			company.name = companyName.text;
			company.address = address.text;
			company.city = city.text;
			company.state = state.text;
			company.zip = zip.text;
			company.phone = phone.text;
			company.industry = industry.selectedItem as Industry;
			if (company.id == 0)
			{
				ro.create(company);	
			}
			else
			{
				ro.update(company);
			}
		}

		private function deleteItem():void
		{
			ro.remove(company);		
		}

		private function create_resultHandler(event:ResultEvent):void
		{
			company.id = event.result.id;
			dispatchEvent(new CompanyEvent(CompanyEvent.CREATED, company));			
		}

		private function update_resultHandler(event:ResultEvent):void
		{
			dispatchEvent(new CompanyEvent(CompanyEvent.UPDATED, company));			
		}

		private function remove_resultHandler(event:ResultEvent):void
		{
			dispatchEvent(new CompanyEvent(CompanyEvent.DELETED, company));			
		}
		
		private function faultHandler(event:FaultEvent):void
		{
			Alert.show(event.fault.faultDetail);
		}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RemoteObject id="ro" destination="companyService" endpoint="{&apos;http://{server.name}:{server.port}/samples-spring/messagebroker/amf&apos;}">
			<s:method name="create" result="create_resultHandler(event)"/>
			<s:method name="update" result="update_resultHandler(event)"/>
			<s:method name="remove" result="remove_resultHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	
	<mx:Form>
		<mx:FormItem label="Id">
			<s:TextInput text="{company.id}" enabled="false"/>
		</mx:FormItem>
		<mx:FormItem label="Name">
			<s:TextInput id="companyName" text="{company.name}"/>
		</mx:FormItem>
		<mx:FormItem label="Industry">
			<local:BindableComboBox id="industry" dataProvider="{industries}" labelField="name" valueField="id" value="{company.industry.id}"/>
		</mx:FormItem>
		<mx:FormItem label="Address">
			<s:TextInput id="address" text="{company.address}"/>
		</mx:FormItem>
		<mx:FormItem label="City">
			<s:TextInput id="city" text="{company.city}"/>
		</mx:FormItem>
		<mx:FormItem label="State">
			<s:TextInput id="state" text="{company.state}"/>
		</mx:FormItem>
		<mx:FormItem label="Zip">
			<s:TextInput id="zip" text="{company.zip}"/>
		</mx:FormItem>
		<mx:FormItem label="Phone">
			<s:TextInput id="phone" text="{company.phone}"/>
		</mx:FormItem>
	</mx:Form>

	<s:HGroup left="8" bottom="8">
		<s:Button label="Close" click="parent.removeChild(this)"/>
		<s:Button label="Save" click="save()"/>
		<s:Button label="Delete" click="deleteItem()"/>
	</s:HGroup>
	
</mx:Canvas>
