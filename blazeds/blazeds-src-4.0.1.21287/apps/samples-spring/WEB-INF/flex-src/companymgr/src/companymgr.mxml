<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   applicationComplete="init()">
	
	<fx:Script>
		<![CDATA[

			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			
			[Bindable] private var companies:ArrayCollection;
			[Bindable] private var industries:ArrayCollection;
			
			private function init():void
			{
				roIndustry.findAll();
			}
			
			private function company_findByName_resultHandler(event:ResultEvent):void
			{
				companies = event.result as ArrayCollection
			}
			
			private function industry_findAll_resultHandler(event:ResultEvent):void
			{
				industries = event.result as ArrayCollection
			}
			
			private function faultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.faultDetail);
			}
			
			public function openCompany(company:Company):void
			{
				var children:Array = tn.getChildren();
				for (var i:int = 0; i<children.length; i++)
				{
					if (CompanyForm(children[i]).company.id == company.id)
					{
						tn.selectedChild = children[i];
						return;
					}
				}
				
				var form:CompanyForm = new CompanyForm();
				form.addEventListener(CompanyEvent.CREATED, companyCreatedHandler);
				form.addEventListener(CompanyEvent.UPDATED, companyUpdatedHandler);
				form.addEventListener(CompanyEvent.DELETED, companyDeletedHandler);
				tn.addChild(form);
				form.company = company;
				form.industries = industries;
				tn.selectedChild = form;
			}
			
			private function search():void
			{
				roCompany.findByName(searchStr.text);
			}
			
			private function companyCreatedHandler(event:CompanyEvent):void
			{
				search();				
			}
			
			private function companyUpdatedHandler(event:CompanyEvent):void
			{
				search();				
			}
			
			private function companyDeletedHandler(event:CompanyEvent):void
			{
				tn.removeChild(event.target as CompanyForm);
				search();				
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RemoteObject id="roCompany" destination="companyService" endpoint="{&apos;http://{server.name}:{server.port}/samples-spring/messagebroker/amf&apos;}">
			<s:method name="findByName" result="company_findByName_resultHandler(event)"/>
		</s:RemoteObject>
		
		<s:RemoteObject id="roIndustry" destination="industryService" endpoint="{&apos;http://{server.name}:{server.port}/samples-spring/messagebroker/amf&apos;}">
			<s:method name="findAll" result="industry_findAll_resultHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>

	<s:controlBarContent>
		<s:TextInput id="searchStr"/>
		<s:Button label="Search" click="search()"/>
		<s:Button label="New Company" click="openCompany(new Company())"/>
	</s:controlBarContent>

	<mx:HDividedBox top="8" bottom="8" left="8" right="8">
		<mx:DataGrid id="dg" dataProvider="{companies}" width="30%" height="100%"
					 doubleClickEnabled="true"
					 doubleClick="openCompany(dg.selectedItem as Company)">
			<mx:columns>
				<mx:DataGridColumn dataField="name" headerText="Name"/>
				<mx:DataGridColumn dataField="city" headerText="City"/>
			</mx:columns>
		</mx:DataGrid>
		<mx:TabNavigator id="tn" width="70%" height="100%"/>
	</mx:HDividedBox>
	
</s:Application>
