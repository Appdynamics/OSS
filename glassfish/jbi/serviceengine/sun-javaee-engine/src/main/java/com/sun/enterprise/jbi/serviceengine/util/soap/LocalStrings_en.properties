#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2004-2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#
# ============================================================================
#
# This is the English resource bundle for the com.sun.jbi.binding.soap package.
# All messages, both logging and exception, produce by methods in soap binding
# component classes are contained in this file. 
#
# @author Srinivas Kondapalli
#
# ============================================================================
# Common messages
# ============================================================================
#

SBC_ERROR_DETAILS=Details : {0}

SBC_ALGORITHM_ERROR=Something is seriously wrong here. Fix it

SBC_SHORT_ERROR_DESCRIPTION=Error Short Description :{0}

SBC_LONG_ERROR_DESCRIPTION=Error Long Description :{0}

SBC_INVOKE_OUTBOUND_MESSAGE_HANDLERS=[Provider] Invoking the Message Handlers for endpoint :{0} in service {1}

SBC_INVOKE_INBOUND_MESSAGE_HANDLERS=[Consumer] Invoking the Message Handlers for endpoint :{0} in service {1}

#
# ============================================================================
# Lifecycle messages
# ============================================================================
#

SBC_SHUTDOWN_BEGIN=Shutting down the SOAP binding component

SBC_SHUTDOWN_END=SOAP binding component has been shutdown

SBC_START_BEGIN=Starting the SOAP binding component

SBC_START_END=SOAP Binding component has been started

SBC_STOP_BEGIN=Stopping the SOAP binding component

SBC_STOP_END=SOAP binding componetn has been stopped

SBC_CREATE_DEPLOYER_FAIL=Exception while creating SoapBindingDeployer object.

SBC_STOP_END=The soap binding component has been successfully stopped

SBC_LOAD_CONFIG_DATA=Loading Configuration for soap binding component

SBC_UNREGISTER_CONFIG_MBEAN=Unregistering SOAP Binding Configuration MBean

SBC_CONFIG_MBEAN_DETAILS=ConfigMBean name: {0}

SBC_EVTMNGR_INIT=Initializing the event manager

SBC_EVTMNGR_SHUTDOWN_WAIT=Waiting for the event manager thread to shutdown

SBC_EVTMNGR_SHUTDOWN_FAILURE=Could not shutdown event manager thead properly

SBC_REGISTER_ENDPOINT=Registering Endpoint {0}

SBC_ACTIVATE_ENDPOINT=Activating endpoint {1} for service {0}

SBC_REGISTER_ENDPOINTS=Registering any existing deployed soap binding endpoints.

SBC_DEACTIVATE_ENDPOINT=Deactivating endpoint {1} in service {0}

SBC_UNREGISTER_ENDPOINTS=Un-registering all deployed soap binding endpoints

SBC_BOOTSTRAP_REQUIRED=Bootstrapping the component with configured values.

SBC_INIT_DEPLOYMENT_REGISTRY=Initializing the Deployment Registry

#
# ============================================================================
# configuration messages
# ============================================================================
#

SBC_CONFIG_FILE_HEADER=#SOAP Binding configuration properties sheet

SBC_CONFIG_FILE_TIMESTAMP=#{0}

SBC_INVALID_CONFIG_FILE=Invalid XML Config  File : endpoints.xml

SBC_LOGLEVEL_CONFIG=Log Level = {0}

SBC_MINTHREADS_CONFIG=Minimum thread count = {0}

SBC_MAXTHREADS_CONFIG=Maximum thread count = {0}

SBC_DEPLOYIMPL_CONFIG=Deployment Implementation Class = {0}

SBC_DEPLOYIMPL_PROPERTIES_CONFIG=DeploymentProperties = {0}

SBC_PROPERTY_NOT_STRING=Value of property [{0}] is not a String. It is of type {1}

SBC_PROPERTY_NOT_ELEMENT=Value of property [{0}] is not a Element. It is of type {1}

SBC_CONFIG_VALUE_ERROR=Error retrieving configuration value for {0}

SBC_CONFIG_VALUELIST_ERROR=Error retrieving configuration value list for {0}

SBC_CONFIG_ELEMENT_ERROR=Error retrieving configuration element for {0}

SBC_CONFIG_ELEMENTLIST_ERROR=Error retrieving configuration element list for {0}

SBC_HOST_NAME_CONFIG=\tHost Name       = 

SBC_PORT_NUMBER_CONFIG=\tPort Number     = 

SBC_NON_PROXY_HOSTS_CONFIG=\tNon Proxy Hosts = 

SBC_USER_NAME_CONFIG=\tUser Name       = 

SBC_PASSWORD_CONFIG=\tPassword        = 

SBC_IS_REQUIRED_FALSE=\tIs Required       = false

SBC_HTTP_PROXY_DETAILS=Http Proxy details = {0}

SBC_SSL_PROXY_DETAILS=SSL Proxy details = {0}

SBC_WSDL_PARSE_ERROR=WSDL file {0} parse error, cause {1} 

SBC_ENDPOINT_VALIDATION_ERROR=Error occurred during endpoint validation {0}

SBC_NO_ENDPOINTS_FOUND_ERROR=None of endpoints can be supported by Soapbinding. Cause {0}

SBC_REQUIRED_ATTR_NOT_FOUND=Required attribute {0} not found. Cause {1}

SBC_REQUIRED_ATTR_CANNOT_BE_NULL=Required attribute {0} has to have a value, cannot be null. Cause {1}

SBC_CANNOT_GET_ATTR_VALUE=Cannot get attribute value of {0}. Cause {1}

SBC_NO_EXTENSION_ELEMENT_FOUND=No extension element named {0} found.

SBC_MANY_EXTENSION_ELEMENTS_FOUND=More than one extension element named {0} found. Returning first one.

SBC_FOUND_SOAP_EXTN_ELEMENT=WSDLFileReader Found a Soap Binding.

#
# ============================================================================
# deployment messages
# ============================================================================
#

SBC_CLEAN_FAILED=Unable to clean up folder

SBC_INVALID_ENDPOINT=Endpoint name is null in config file for {0}

SBC_DUPLICATE_ENDPOINT={0} is already deployed. Check the endpoint configuration.

SBC_INVALID_DEPLOYMENT_ARTIFACTS=Invalid Deployment Artifact. Either xml or wsdl endpoint artifacts should be present.

SBC_INVALID_WSDL_FILE=Invalid WSDL File. Check wsdl files bundled with deployment artifacts.

SBC_INVALID_CONSUMER_WSDL_FILE=Invalid consumer WSDL file. Please check consumer.wsdl bundled with deployment artifacts

SBC_INVALID_PROVIDER_WSDL_FILE=Invalid provider WSDL file. Please check provider.wsdl bundled with deployment artifacts

SBC_INVALID_XML_FILE=Invalid XML file. Please check endpoints.xml bundled with deployment artifacts

SBC_ADMIN_MBEAN_FAILED=Cannot create message builder.

SBC_XML_STRING_CREATION_FAILED=Cannot create XML string message.

SBC_DUPLICATE_DEPLOYMENT=Duplicate Deployment. Deployment {0} already exists. Aborting Deployment.

SBC_SECURITY_HANDLER_DEPLOYMENT_ADDITION_ERROR=Error adding deployment for Endpoint {0}\
for Security Handler due to : {1}

SBC_SECURITY_HANDLER_DEPLOYMENT_REMOVAL_ERROR=Error removing deployment for Endpoint with registry key \
{0} for Security Handler due to {1}

SBC_CONSUMER_WSDL_DEPLOY=Doing Consumer WSDL deployment.

SBC_PROVIDER_WSDL_DEPLOY=Doing Provider WSDL deployment.

SBC_XML_DEPLOY=Doing XML deployment.

SBC_ADD_DEPLOYMENT_KEY=Added Deployment with Key {0} to registry

SBC_REMOVE_DEPLOYMENT_KEY=Removed Deployment {0} from registry

SBC_SERIALIZE_ALL_DEPLOYMENTS=Serializing {0} deployments

SBC_TOKENIZED_ENDPOINT=Tokenized endpoint {0}

SBC_PERSISTENT_DEPLOYMENT_STORE=Deployment persistent registry store is {0}

SBC_SECURITY_FILE_DETAILS=Security Configuration file is {0}

SBC_SECURITY_FILE_NOT_FOUND=The file {0} does not exist or cannot be read.

SBC_SECURITY_FILE_FOUND=Using Endpoint security file {0} bundled with the deployment artifacts.

SBC_SECURITY_FILE_DOES_NOT_EXIST=The file {0} does not exist

SBC_SECURITY_FILE_CANNOT_BE_READ=The file {0} cannot be read.

SBC_CREATE_REGISTRY_IMPLEMENTATION=Creating a new instance of {0}

SBC_INIT_REGISTRY_IMPLEMENATION=Initializing the registry implemention

SBC_DESERIALIZE_STRING=String to be deserialized is {0}

SBC_DESERIALIZED_ENDPOINT=The Deserialized Endpoint is {0}

SBC_DEPLOYMENT_REGISTRY_HEADER=#SOAP Binding deployment registry file

SBC_DEPLOYMENT_REGISTRY_FORMAT=#role(0=consumer,1=provider), interface_name, service_name, \
endpoint_name, link_type, endpoint_address, deployment_id (serviceUnitName), wsdl_deployment_file, \
endpoint_security_config_file, interface_style, (operation_name, soapAction, mepname, \
input_namespace, output_namespace ) +

SBC_DEPLOYMENT_REGISTRY_TIMESTAMP=#{0}

SBC_NO_ARTIFACT_EXTENSION_ELEMENT=No artifact extension element present in service unit \
deployment descriptor

SBC_INVALID_ARTIFACT_EXTENSION_ELEMENT_ATTRIBUTES=Service Unit deployment descriptor does \
not define all the mandatory attributes of artifact extension element

SBC_INVALID_DEPLOYMENT_TYPE=Invalid deployment type [{0}] defined in Service Unit deployment \
descriptor

SBC_INVALID_ROLE=Invalid role [{0}] defined in Service Unit deployment descriptor

SBC_NO_PROVIDES_ELEMENT= A Single Provides element cannot be found in Service Unit deployment descriptor

SBC_NO_CONSUMES_ELEMENT= A Single Consumes element cannot be found in Service Unit deployment descriptor

SBC_INVALID_INTERFACE_NAME=Interface QName should be defined in Service Unit deployment descriptor

SBC_INVALID_SERVICE_NAME=Service and Endpoint QName should be defined in Service Unit deployment descriptor

SBC_UNSUPPORTED_LINK_TYPE=Only hard and standard link types are currently supported.

SBC_SU_DD_PARSE_FAILURE=Failed to parse Service unit deployment descriptor.

SBC_NAMESPACE_PREFIX_NOT_FOUND=Namespace prefix {0} not found in service unit deployment descriptor

SBC_INVALID_XML_SERVICE_NAME=Service name incorrectly defined in XML deployment artifacts

SBC_INVALID_ENDPOINT_NAME=Endpoint name incorrectly defined in XML deployment artifacts

SBC_XML_DEPLOYMENT_ARTIFACTS_MISMATCH=Services defined by the XML artifacts do not correspond to the services \
defined in Service Unit deployment descriptor

SBC_INVALID_SERVICE_DESCRIPTION=Both ServiceQName and Endpoint name need to be defined for consume element.

SBC_DEPLOYMENT_NOT_FOUND=Service/Interface specified in the Service Unit deployment descriptor could not be \
found in the deployment artifacts.

SBC_SU_DEPLOYMENT_NOT_FOUND=Deployment could not be found for the service unit in SOAP Binding component.
#
# ============================================================================
# Thread Framework messages
# ============================================================================
#
SBC_PROCESS_WORK_REQUEST=WorkManager passing request to worker thread for processing

SBC_NO_FREE_THREAD=Failed to obtain free thread for processing

SBC_FREE_THREAD_AVAILABLE=A free thread is available for processing service requests

SBC_CREATE_NEW_THREAD=Creating a new thread for processing service requests

SBC_WAIT_FREE_THREAD=Waiting for a free thread to process service request

SBC_GOT_FREE_THREAD=Got a free thread at last. now we can process them !!!

SBC_ADD_FREE_THREAD=Adding worker thread to the free thread pool

SBC_START_WORKER_THREAD=Starting worker thread {0}

SBC_STOP_FREE_THREAD=Stopping the thread. There are enough free threads

SBC_THREAD_SHUTDOWN_SIGNAL=Received an interrupt in {0} for shutting down

SBC_THREAD_SHUTDOWN=Shutting down thread {0}

SBC_THREAD_STOPPED=Thread {0} has been stopped

SBC_THREAD_INTERRUPT_FAIL=Failed to interrupt thread : {0}

SBC_THREAD_NOT_RUNNING=Worker Thread is not running

SBC_THREAD_NOT_FOUND=Thread {0} cannot be found

SBC_FREE_THREAD_WAIT_ERROR=Exception thrown when waiting for a free thread

SBC_THREADPOOL_NOT_RUNNING=Thread pool has not been started

SBC_THREADPOOL_ACTIVE=Thread Pool is in a active state

SBC_THREADPOOL_ALREADY_INIT=Threadpool has already been initialized

SBC_THREADPOOL_INTERRUPT_SIGNAL=Received interrupt signal to cleanup worker thread pool

SBC_START_THREADPOOL=Starting the worker thread pool

SBC_STOP_THREADPOOL=Stopping the worker thread pool

SBC_THREADPOOL_CLEANUP=Cleaning up the worker thread pool

SBC_WORK_MANAGER_NOTIFY_FAIL=Exception while notifying work manager

SBC_COMMAND_IMPL_ERROR=Error thrown by the command implementation

SBC_COMMAND_IMPL_EXCEPTION=Runtime exception/error thrown by the command implementation
#
# ============================================================================
# outbound messages
# ============================================================================
#
SBC_INVALID_MESSAGE_EXCHANGE_HANDLER=Invalid handler for Message Exchange class is {0}

SBC_INVALID_MESSAGE=Invalid message for this message exchange. Ignoring it

SBC_INVALID_CONTENT_TYPE=Could not process server response. Invalid content type

SBC_STATUS_CODE_DETAILS=Status code is {0}

SBC_GET_VALID_RESPONSE_MSG=Getting valid response message

SBC_GET_FAULT_RESPONSE_MSG=Getting fault response message

SBC_SET_VALID_RESPONSE_MSG=Setting valid response message

SBC_SET_FAULT_RESPONSE_MSG=Setting fault response message

SBC_PROCESS_OUTBOUND=[Provider] Request {0} is being processed

SBC_SUCC_PROCESS_OUTBOUND=[Provider] Sucessfully processed request {0}

SBC_FAIL_PROCESS_OUTBOUND=[Provider] Could not process request {0}

SBC_MESSAGE_EXCHANGE_NOT_SUPPORTED=This is not currently supported. Message {0} cannot be processed

SBC_UNKNOWN_MESSAGE_EXCHANGE=Unknown Message Exchange status. Cannot process request

SBC_MESSAGE_EXCHANGE_COMPLETED=Received Done status for {0}

SBC_NULL_INPUT_MESSAGE=Input message cannot be null

SBC_NO_INPUT_MESSAGE=No input request has been set in the message exchange

SBC_INVOKED_OPERATION_QNAME=Operation invoked : {0}

SBC_OPERATION_NOT_SUPPORTED={0} is not supported in {1}

SBC_INVOKE_OUTBOUND_MESSAGE_HANDLERS=[Provider] Invoking the Message Handlers for endpoint :{0} in service {1}

SBC_INVOKE_INBOUND_MESSAGE_HANDLERS=[Consumer] Invoking the Message Handlers for endpoint :{0} in service {1}

SBC_SOAP_MESSAGE_SECURE_ERROR=An error occured in securing the SOAP message {0}

SBC_NORMALIZE_RESPONSE_MESSAGE=Normalizing the response message

SBC_NO_RESPONSE=No response has been retrieved for this pattern

SBC_RUNTIME_EXCEPTION= Runtime exception thrown while processing request {0}

SBC_EXCEPTION= Exception thrown while processing request {0}

SBC_MEP_NOT_SUPPORTED={0} is not currently supported

SBC_URI_SCHEME=URI Scheme is {0}

SBC_OUTBOUND_ADDRESS_LOCATION=Provider Address location is {0}

SBC_CONTENT_TYPE_DETAILS=Content Type is : {0}

SBC_RESPONSE_CODE_DETAILS=Response code is : {0}

SBC_SOAP_MESSAGE_EXTRACTION=Extracting the SOAP Message from the response

SBC_FAULT_MESSAGE_EXISTANCE=Fault Message could exist in the error stream

SBC_UNSUPPORTED_CONTENT_TYPE=Unsupported data content type {0}

SBC_INTERNAL_SERVER_ERROR=INTERNAL SERVER ERROR.Server Response code {0}

SBC_INVALID_ENDPOINT_ADDRESS=Invalid Endpoint address [ {0} ] configuration

#
# ============================================================================
# Messages in common classes
# ============================================================================
#
SBC_EVENT_MANAGER_START=Starting the event manager

SBC_EVENT_MANAGER_CLEANUP=Cleaning up the event manager

SBC_EVENT_MANAGER_STOP=The event manager has been stopped

SBC_STOP_EVENT_MANAGER=Stopping the event manager

SBC_EVENT_MANAGER_LIFECYCLE_ERROR=Event Manager Lifecycle error

SBC_WAIT_MESSAGE_REQUEST=Waiting for message requests

SBC_RECEIVED_MESSAGE_REQUEST=Received message exchange object : {0}

SBC_PATTERN_NOT_SUPPORTED=Pattern {0} is not currently supported

SBC_HANDLER_NOT_EXIST=Handler does not exist for {0}

SBC_SET_MESSAGE_EXCHANGE_RESPONSE=Setting response for Message Exchange id {0}

SBC_SERVICE_REFERENCE_NOT_FOUND=Could not locate Service Reference for {0}

SBC_SERVICE_REFERENCE_FOUND=Successfully located Service Reference for {0}

SBC_CONSUMER_PROCESS_IN_OUT_MEP=[Consumer] Processing the web request using IN OUT MEP

SBC_CONSUMER_PROCESS_IN_ONLY_MEP=[Consumer] Procesing the web request using IN ONLY MEP

SBC_CONSUMER_PROCESS_ROBUST_IN_ONLY_MEP=[Consumer] Processing the web request using Robust IN ONLY MEP

SBC_CONSUMER_PROCESS_IN_OPTIONAL_OUT_MEP=[Consumer] Processing the web request using IN OPTIONAL OUT MEP

SBC_CONSUMER_CREATE_IN_OUT_MEP_HANDLER=[Consumer] Creating a handler for In Out Messange Exchange Pattern.

SBC_CONSUMER_CREATE_IN_ONLY_MEP_HANDLER=[Consumer] Creating a handler for In Only Message Exchange Pattern.

SBC_CONSUMER_CREATE_ROBUST_IN_ONLY_MEP_HANDLER=[Consumer] Creating a handler for Robust In Only Message Exchange Pattern.

SBC_CONSUMER_CREATE_IN_OPTIONAL_OUT_MEP_HANDLER=[Consumer] Creating a handler for In Optional Out Message Exchange Pattern.

SBC_CONSUMER_IN_OUT_MEP_HANDLER_CLEANUP=[Consumer] Cleaning up the In Out MEP Handler

SBC_CONSUMER_ROBUST_IN_ONLY_MEP_HANDLER_CLEANUP=[Consumer] Cleaning the Robust In only MEP Handler

SBC_CONSUMER_IN_OPTIONAL_OUT_MEP_HANDLER_CLEANUP=[Consumer] Cleaning the In Optional Out MEP Handler

SBC_CONSUMER_IN_ONLY_MEP_HANDLER_CLEANUP=[Consumer] Cleaning the In only MEP Handler

SBC_CONSUMER_IN_OUT_MEP_HANDLER_CLEANUP_FAILURE=[Consumer] Could not clean up In Out MEP Handler

SBC_CONSUMER_ROBUST_IN_ONLY_MEP_HANDLER_CLEANUP_FAILURE=[Consumer] Could not clean up Robust In Only MEP Handler

SBC_CONSUMER_IN_OPTIONAL_OUT_MEP_HANDLER_CLEANUP_FAILURE=[Consumer] Could not clean up In Optional Out MEP Handler

SBC_PROVIDER_PROCESS_IN_OUT_MEP=[Provider] Processing the service request using IN OUT MEP

SBC_PROVIDER_PROCESS_IN_ONLY_MEP=[Provider] Procesing the service request using IN ONLY MEP

SBC_PROVIDER_PROCESS_ROBUST_IN_ONLY_MEP=[Provider] Processing the service request using ROBUST IN ONLY MEP

SBC_PROVIDER_PROCESS_IN_OPTIONAL_OUT_MEP=[Provider] Processing the service request using IN OPTIONAL OUT MEP

SBC_PROVIDER_CREATE_IN_OUT_MEP_HANDLER=[Provider] Creating a handler for In Out Message Exchange Pattern.

SBC_PROVIDER_CREATE_IN_ONLY_MEP_HANDLER=[Provider] Creating a handler for In Only Message Exchange Pattern.

SBC_PROVIDER_CREATE_ROBUST_IN_ONLY_MEP_HANDLER=[Provider] Creating a handler for Robust In Only Message Exchange Pattern.

SBC_PROVIDER_CREATE_IN_OPTIONAL_OUT_MEP_HANDLER=[Provider] Creating a handler for In Optional Out Message Exchange Pattern.

SBC_PATTERN_NOT_SUPPORTED={0} is not supported

SBC_RECEIVED_COMPLETED_STATUS=Received done status from the Normalized Message Service

SBC_SEND_MESSAGE_EXCHANGE=Sending message {0} to the service channel for processing

SBC_RECEIVED_NOTIFICATION=Received notification from the event manager

SBC_NOTIFY_HANDLER=Notifying the handler that the response has arrived

SBC_REMOVE_EXCHANGE_ID=Removing exchange id from event manager

SBC_CLEANUP_NOT_REQUIRED=MEP Handler is in  a final state. No cleanup to be done

SBC_SET_ERROR_STATUS=Setting error status

SBC_SET_COMPLETE_STATUS=Setting completed status

SBC_SET_DONE_STATUS=Setting done status

SBC_OPERATION_NOT_DEPLOYED={0} has not been deployed for this Endpoint

SBC_OPERATION_NOT_SUPPORTED={0}is not supported by {1}

SBC_PROCESS_OPERATION=Processing operation {0}

SBC_UNKNOWN_STATE=ERROR : Unknown state. Message cannot be denormalized

SBC_CLEANUP_INBOUND_PROCESSOR=Cleaning up the inbound processor

SBC_SOAP_BODY_NOT_FOUND=Body element cannot be found in SOAP Request message

SBC_NOT_EXTRACT_OPERATION_WIRE_SIGNATURE=Operation wire signature could not be extracted from SOAP request message

SBC_OPERATION_QNAME_DETAILS=Extracted operation qualified name is {0}

SBC_MESSAGE_FACTORY_CREATION_FAILURE=Failed to create message factory instance

SBC_DENORMALIZE_JBI_MESSAGE=Denormalizing JBI Message into a SOAP Message

SBC_DENORMALIZE_JBI_MESSAGE_FAILURE_RT_EXP=Runtime exception thrown while denormalizing JBI Message

SBC_DENORMALIZE_JBI_MESSAGE_FAILURE_EXP=Exception thrown while denormalizing JBI message

SBC_CREATE_SOAP_FAULT=Creating a soap fault message

SBC_SUCCESS_DENORMALIZE_JBI_MESSAGE=Successfully denormalized response message

SBC_DENORMALIZE_EXCEPTION=Denormalizing exception into a SOAP Message

SBC_NULL_OBJECT_DENORMALIZATION=A null exception object passed for denormalization

SBC_SOAP_FAULT_GENERATION_FAILURE_RT_EXP=Runtime exception thrown while generating Fault Message

SBC_SOAP_FAULT_GENERATION_FAILURE=Failed to generate soap fault message

SBC_SUCCESS_DENORMALIZE_EXCEPTION=Successfully denormalized exception object

SBC_NO_HEADER=There is no header in the normalized message

SBC_DEONRMALIZED_MESSAGE_DETAILS=Denormalized Message is : {0}

SBC_CLOSE_OUTPUT_STREAM=Failed to close writer output stream

SBC_DENORMALIZE_FAULT_MESSAGE=Denormalizing fault message into a SOAP Message

SBC_FAULT_ELEMENT_FOUND=SOAP Fault element found in Normalized Message

SBC_SUCCESS_DENORMALIZE_FAULT=Successfully denormalized fault message.

SBC_NORMALIZE_FAULT_MESSAGE_FAILURE=Failed to normalize fault message

SBC_NORMALIZE_SOAP_MESSAGE=Normalizing the soap message into a JBI normalized message

SBC_NORMALIZE_SOAP_MESSAGE_FAILURE=Failed to normalize soap message

SBC_NORMALIZE_SOAP_MESSAGE_FAILURE_RT_EXP=Runtime exception thrown while normalizing soap message

SBC_SUCCESS_NORMALISE_SUCCESS=Normalized the soap message

SBC_UNKNOWN_OPERATION_STYLE=Unknown operation style {0}. Cannot normalize message

SBC_STYLE_DETAILS=style is {0}

SBC_EXTRACT_REQUEST_PAYLOAD=Extracting request payload from the web service request

SBC_IS_FAULT_RESPONSE=Server has sent a fault response

SBC_DEFAULT_FAULT_STRING=Failed to process web service request

SBC_ADD_SOAP_BODY=The Soap Message does not have a body, adding one.

SBC_LOCATE_SERVICE_REFERENCE=Using {0} link type to locate service endpoint for {1}
