#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
# 
# Copyright 2009 Sun Microsystems, Inc. All rights reserved.
# 
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License. You can obtain
# a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
# or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
# 
# When distributing the software, include this License Header Notice in each
# file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
# Sun designates this particular file as subject to the "Classpath" exception
# as provided by Sun in the GPL Version 2 section of the License file that
# accompanied this code.  If applicable, add the following below the License
# Header, with the fields enclosed by brackets [] replaced by your own
# identifying information: "Portions Copyrighted [year]
# [name of copyright owner]"
# 
# Contributor(s):
# 
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#
button.Flush=Flush

jdbc.pageTitle=JDBC
jdbc.pageTitleHelp=

jdbcResources.pageTitle=JDBC Resources
jdbcResources.pageTitleHelp=JDBC resources provide applications with a means to connect to a database.
jdbcResource.editPageTitle=Edit JDBC Resource
jdbcResource.editPageTitleHelp=Edit an existing JDBC data source.
jdbcResource.targetPageTitle=JDBC Resource Targets
jdbcResource.newPageTitle=New JDBC Resource
jdbcResource.newPageTitleHelp=Specify a unique JNDI name that identifies the JDBC resource you want to create. The name must contain only alphanumeric, underscore, dash, or dot characters.
jdbcResource.poolHelp=Use the <a href="#{request.contextPath}/jdbc/jdbcConnectionPools.jsf">JDBC Connection Pools</a> page to create new pools

#JDBC Connection Pool
jdbcConnectionPools.pageTitle=Connection Pools
jdbcConnectionPools.pageTitleHelp=To store, organize, and retrieve data, most applications use relational databases. Java EE applications access relational databases through the JDBC API. Before an application can access a database, it must get a connection.

jdbcConnectionPool.step1PageTitle=New JDBC Connection Pool (Step 1 of 2)
jdbcConnection.step1PageHelp=Identify the general settings for the connection pool.
jdbcConnectionPool.Step2PageTitle=New JDBC Connection Pool (Step 2 of 2)
jdbcConnection.step2PageHelp=Identify the general settings for the connection pool.  


jdbcConnectionPool.editPageTitle=Edit Connection Pool
jdbcConnection.editPageHelp=Modify an existing JDBC connection pool. A JDBC connection pool is a group of reusable connections for a particular database.
jdbcPool.general=General Settings
jdbcPool.datasource=Datasource Classname:
jdbcPool.driver=Driver Classname:
jdbcPool.datasourceHelpEnter=Select or enter vendor-specific classname that implements the DataSource and/or XADataSource APIs
jdbcPool.driverHelpEnter=Select or enter vendor-specific classname that implements the java.sql.Driver interface.
jdbcPool.datasourceHelp=Vendor-specific classname that implements the DataSource and/or XADataSource APIs
jdbcPool.driverHelp=Vendor-specific classname that implements the java.sql.Driver interface.
jdbcPool.resTypeHelp=Must be specified if the datasource class implements more than 1 of the interface.  
jdbcPool.dbVendor=Database Vendor:
jdbcPool.dbVendorHelp=Select or enter a database vendor
jdbcPool.poolSettings=Pool Settings
jdbcPool.initPoolSize=Initial and Minimum Pool Size:
jdbcPool.initPoolSizeHelp=Minimum and initial number of connections maintained in the pool
jdbcPool.maxPoolSize=Maximum Pool Size:
jdbcPool.maxPoolSizeHelp=Maximum number of connections that can be created to satisfy client requests
jdbcPool.poolResize=Pool Resize Quantity:
jdbcPool.poolResizeHelp=Number of connections to be removed when pool idle timeout expires
jdbcPool.idleTimeout=Idle Timeout:
jdbcPool.idleTimeoutHelp=Maximum time that connection can remain idle in the pool
jdbcPool.maxWait=Max Wait Time:
jdbcPool.maxWaitHelp=Amount of time caller waits before connection timeout is sent
jdbcPool.Validation=Connection Validation
jdbcPool.conValidation=Connection Validation:
jdbcPool.conValidationHelp=Validate connections, allow server to reconnect in case of failure
jdbcPool.valMethod=Validation Method:
jdbcPool.valCN=Validation Classname:
jdbcPool.valCNHelp=If custom-validation is selected, specify validation classname.
jdbcPool.tableName=Table Name:
jdbcPool.tableNameHelp=If table validation is selected, select table name
jdbcPool.failOnAny=On Any Failure:
jdbcPool.failOnAnyHelp=Close all connections and reconnect on failure, otherwise reconnect only when used
jdbcPool.closeAll=Close All Connections
jdbcPool.allowCaller=Allow Non Component Callers:
jdbcPool.allowCallerHelp=Enable the pool to be used by non-component callers such as ServletFilters
jdbcPool.nonTransConnection=Non Transactional Connections:
jdbcPool.nonTransConnectionHelp=Returns non-transactional connections

jdbcPool.transIsolationSection=Transaction
jdbcPool.transIsolation=Transaction Isolation:
jdbcPool.transIsolationHelp=If unspecified, use default level for JDBC Driver
jdbcPool.isoLevel=Isolation Level:
jdbcPool.isoLevelHelp=All connections use same isolation level; requires Transaction Isolation
jdbcPool.Guaranteed=Guaranteed
jdbcPool.initSqlHelp=Specify a SQL string to be executed whenever a connection is created from the pool
jdbcPool.initSql=Init SQL:
jdbcPool.sqlTL=SQL Trace Listeners:
jdbcPool.sqlTLHelp=Comma-separated list of classes that implement the org.glassfish.api.jdbc.SQLTraceListener interface
jdbcPool.pooling=Pooling:
jdbcPool.poolingHelp=When set to false, disables connection pooling for the pool
jdbcPool.duringCreation=During Creation
jdbcPool.ping=Ping:
jdbcPool.pingHelp=When enabled, the pool is pinged during creation or reconfiguration to identify and warn of any erroneous values for its attributes
jdbcConnectionPool.advancePageTitle=Edit Connection Pool Advanced Attributes 
jdbcConnectionPool.advancePageTitleHelp=Modify an existing JDBC connection pool. A JDBC connection pool is a group of reusable connections for a particular database. 
jdbcPool.connectionSettings=Connection Settings
jdbcPool.wrapJdbcObjects=Wrap JDBC Objects:
jdbcPool.wrapJdbcObjectsHelp=When set to true, application will get wrapped jdbc objects for Statement, PreparedStatement, CallableStatement, ResultSet, DatabaseMetaData
jdbcPool.statementCacheSize=Statement Cache Size:
jdbcPool.statementCacheSizeHelp=Caching is enabled when set to a positive non-zero value (for example, 10)
jdbcPool.statementTimeoutInSeconds=Statement Timeout:
jdbcPool.statementTimeoutInSecondsHelp=Timeout property of a connection to enable termination of abnormally long running queries. -1 implies that it is not enabled.
jdbcPool.validateAtmostOnceInSeconds=Validate At Most Once:
jdbcPool.validateAtmostOnceInSecondsHelp=Time-interval within which a connection is validated at most once. 0 implies it is not enabled.
jdbcPool.connectionLeakTimeoutInSeconds=Leak Timeout:
jdbcPool.connectionLeakTimeoutInSecondsHelp=0 implies no leak detection
jdbcPool.connectionLeakReclaim=Leak Reclaim:
jdbcPool.connectionLeakReclaimHelp=If enabled, connection will be reusable (put back into pool) after connection leak timeout occurs
jdbcPool.connectionCreationRetryAttempts=Creation Retry Attempts:
jdbcPool.connectionCreationRetryAttemptsHelp=Number of attempts to create a new connection. 0 implies no retries.
jdbcPool.connectionCreationRetryIntervalInSeconds=Retry Interval:
jdbcPool.connectionCreationRetryIntervalInSecondsHelp=Time interval between retries while attempting to create  a connection.  Effective when Creation Retry Attempts is greater than 0.
jdbcPool.lazyConnectionEnlistment=Lazy Connection Enlistment:
jdbcPool.lazyConnectionEnlistmentHelp=Enlist a resource to the transaction only when it is actually used in a method
jdbcPool.lazyConnectionAssociation=Lazy Association:
jdbcPool.lazyConnectionAssociationHelp=Connections are lazily associated when an operation is performed on them
jdbcPool.associationWithThread=Associate with Thread:
jdbcPool.associationWithThreadHelp=When the same thread is in need of a connection, it can reuse the connection already associated with that thread
jdbcPool.matchConnections=Match Connections:
jdbcPool.matchConnectionsHelp=Turns connection matching for the pool on or off
jdbcPool.maxConnectionUsageCount=Max Connection Usage :
jdbcPool.maxConnectionUsageCountHelp=Connections will be reused by the pool for the specified number of times, after which they will be closed. 0 implies the feature is not enabled.
jdbcConnectionPool.propertyPageTitle=Edit Connection Pool Properties
jdbcConnectionPool.propertyPageTitleHelp=Modify properties of an existing JDBC connection pool.

resourcesTable.colPoolName=Pool Name
resourcesTable.colJndiName=JNDI Name
resourcesTable.colDesc=Description
resourcesTable.colPool=Connection Pool
resourcesTable.colResType=Resource Type
resourcesTable.colClassname=Classname
resourcesTable.colResAdapter=Resource Adapter
resourcesTable.resources=Resources
resourcesTable.Pools=Pools
connectors.User=user
connectors.systemAll=system-all
connectors.systemAdmin=system-admin
connectors.systemInstance=system-instance

msg.JS.confirmDeleteJR=Selected JDBC Resource(s) will be deleted.  Continue?
msg.JS.confirmDeleteCP=Selected Connection Pool(s) will be deleted.  Continue?

msg.warning.poolCreatedPingFailed=Pool successfully created with the following Warning
msg.warning.poolSavedPingFailed=Values successfully saved with the following Warning
msg.Error.classNameCannotBeEmpty=Classname cannot be empty
