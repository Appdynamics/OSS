adapter.param.decode=Cannot decode parameter {0} = {1}
adapter.param.missing={0} command requires the {1} parameter : {2}
adapter.param.missing.passwordfile={0} command requires the passwordfile parameter containing {1} entry.
adapter.param.missing.nodesc={0} command requires the {1} parameter
adapter.exception=Exception in command execution : {0}
adapter.command.notfound=Command {0} not found
adapter.command.notcreated=Implementation for the command {0} exists in the system, but it has some errors, check server.log for details
adapter.command.nocommand=No command was specified.
adapter.wrongprivacy=Command {0} does not have {1} visibility.
adapter.command.launch={0} launch successful
adapter.nodesc=No description provided
adapter.panic=Wrong request landed in AdminAdapter {0}
adapter.auth.userpassword=Invalid user name or password
adapter.command.unacceptableValue=Invalid parameter: {0}.  Its value is {1} but it isn''t one of these acceptable values: {2}
adapter.command.unacceptableBooleanValue=Invalid parameter: {0}.  This boolean option must be set (case insensitive) to true or false.  Its value was set to {1}
adapter.command.tooManyValues=Invalid parameter: {0}.  This parameter may not have more than one value.
adapter.usage=Usage: 
list.containers.command=List all known application containers
list.containers.listapps=Applications deployed
list.containers.nocontainer=No container currently configured

stop.domain.command=Stop a running domain
stop.domain.init=Server shutdown initiated

restart.domain.command=Restart a running domain
restart.domain.init=Server restart initiated
restart.domain.not_enabled=The server was not started with a watchdog. Restart is not possible.  The server was stopped.
restart.domain.internalError=Internal Error: {0}
restart.domain.asadminError=Error in Asadmin.  These 3 arguments must be present on the server's \
original command line:\n-asadmin-classpath\n-asadmin-classname\n-asadmin-args\nCould not restart.
restart.domain.nonAsadminError=Internal Error in ASMain.  These 3 arguments were not set:\n\
-startup-classpath\n-startup-classname\n-startup-args\nCould not restart.
restart.domain.noStartupInfo=Unable to restart.  Neither CLI or non-CLI startup info was found.  Here is what we are looking for:\n{0}\n{1}
restart.domain.jvmError=Error running java process: {0}

version.command=Returns the version of the application server
locations.command=Returns the root and domain locations of the application server
get.restart.required.command=Returns the "restart required" flag

list.modules.command=List all the modules known to the module subsystem

container=Container
status=Status
started=Started
notstarted=Not Started
connector=Connector
implementation=Implementation
contractprovider=ContractProvider

add.resources=The add-resources command creates the resources named in the specified XML file. The xml_file_path is the path to the XML file containing the resources to  be  created.  The  DOCTYPE must be specified as in the resources.xml file.
add.resources.target=Specifies the target  for  which you  are creating the resources.
add.resources.xml_file_name=The path to the XML file containing the resource(s) to be created. The XML file must reside in the <install-dir>/domains/domain1/config directory. If you specify a relative path or simply provide the name of the XML file, this command will prepend <install-dir>/domains/domain1/config  to this operand.
add.resources.noJdbcConnectionPoolId=No pool name defined for JDBC Connection pool.

create.jdbc.resource=creates a JDBC resource with the specified JNDI name
create.jdbc.resource.connectionpoolid=The name of the JDBC connection pool. If two or more JDBC resource elements point to the same connection pool element, they use the same pool connection at runtime.
create.jdbc.resource.description=Text providing descriptive details about the JDBC resource.
create.jdbc.resource.jndi_name=The JNDI name of this JDBC resource.
create.jdbc.resource.enabled=Determines whether the JDBC resource is enabled at runtime. The default value is true.
create.jdbc.resource.success=JDBC resource {0} created successfully.
create.jdbc.resource.duplicate=A JDBC resource named {0} already exists.
create.jdbc.resource.fail=Command create-jdbc-resource failed.
create.jdbc.resource.connPoolNotFound=Attribute value (pool-name = {0}) is not found in list of jdbc connection pools.
delete.jdbc.resource=removes a JDBC resource with the specified JNDI name
delete.jdbc.resource.jdbc_resource_name=The JNDI name of this JDBC resource to be removed.
delete.jdbc.resource.success=Command delete-jdbc-resource executed successfully.
delete.jdbc.resource.fail=Command create-jdbc-resource failed.
delete.jdbc.resource.notfound=A JDBC resource named {0} does not exist.
list.jdbc.resources=gets all JDBC resources
list.jdbc.resources.success=Command list-jdbc-resources executed successfully.
list.jdbc.resources.fail=Command list-jdbc-resources failed.
create.jdbc.connection.pool=registers the JDBC connection pool
create.jdbc.connection.pool.datasourceclassname=The name of the vendor\u2014supplied JDBC datasource resource manager.
create.jdbc.connection.pool.restype=The interface that the datasource class implements. Must be one of javax.sql.DataSource, javax.sql.ConnectionPoolDataSource or javax.sql.XADataSource. It leads to an error when this option has a legal value and the indicated interface is not implemented by the datasource class. This option has no default value.
create.jdbc.connection.pool.steadypoolsize=The minimum and initial number of connections maintained in the pool. The default value is 8.
create.jdbc.connection.pool.maxpoolsize=The maximum number of connections that can be created. The default value is 32.
create.jdbc.connection.pool.maxwait=The amount of time a caller will wait before a connection timeout is sent. The default is 60 seconds. A value of 0 forces the caller to wait indefinitely.
create.jdbc.connection.pool.poolresize=Quantity by which the pool will scale-up or scale-down the number of connections. Scale-up: When the pool has no free connections, pool will scale-up by this quantity. Scale-down: All the invalid and idle connections are removed, sometimes resulting in removing connections of quantity greater than this value. Steadypoolsize will be ensured. Possible values are from 0 to MAX_INTEGER. The default value is 2.
create.jdbc.connection.pool.idletimeout=The maximum time, in seconds, that a connection can remain idle in the pool. After this time, the implementation can close this connection. This timeout value must be kept shorter than the server side timeout value to prevent the accumulation of unusable connections in the application. The default value is 300.
create.jdbc.connection.pool.isolationlevel=The transaction-isolation-level on the pooled database connections. This option does not have a default value. If not specified, the pool operates with the default isolation level that the JDBC driver provides. You can set a desired isolation level using one of the standard transaction isolation levels: read-uncommitted, read-committed, repeatable-read, serializable. Applications that change the isolation level on a pooled connection programmatically risk polluting the pool. This could lead to program errors.
create.jdbc.connection.pool.isisolationguaranteed=This is applicable only when a particular isolation level is specified for transaction-isolation-level. The default value is true. This option assures that every time a connection is obtained from the pool, isolation level is set to the desired value. This could have some performance impact on some JDBC drivers. Administrators can set this to false when the application does not change --isolationlevel before returning the connection.
create.jdbc.connection.pool.isconnectvalidatereq=If set to true, connections are validated or checked to see if they are usable before giving out to the application. The default value is false.
create.jdbc.connection.pool.validationmethod=The name of the validation table used to perform a query to validate a connection. Valid settings are: auto-commit, meta-data, or table. The default value is auto-commit.
create.jdbc.connection.pool.validationtable=The name of the validation table used to perform a query to validate a connection.
create.jdbc.connection.pool.failconnection=If set to true, all connections in the pool must be closed when a single validation check fails. The default value is false. One attempt is made to re-establish failed connections.
create.jdbc.connection.pool.allownoncomponentcallers=A pool with this property set to true, can be used by non-J2EE components, that is, components other than EJBs or Servlets. The returned connection is enlisted automatically with the transaction context obtained from the transaction manager. 
create.jdbc.connection.pool.nontransactionalconnections=A pool with this property set to true returns non-transactional connections. This connection does not get automatically enlisted with the transaction manager.
create.jdbc.connection.pool.validateatmostonceperiod=
create.jdbc.connection.pool.leaktimeout=
create.jdbc.connection.pool.leakreclaim=
create.jdbc.connection.pool.creationretryattempts=
create.jdbc.connection.pool.creationretryinterval=
create.jdbc.connection.pool.statementtimeout=
create.jdbc.connection.pool.lazyconnectionenlistment=
create.jdbc.connection.pool.lazyconnectionassociation=
create.jdbc.connection.pool.associatewiththread=
create.jdbc.connection.pool.matchconnections=
create.jdbc.connection.pool.maxconnectionusagecount=
create.jdbc.connection.pool.wrapjdbcobjects=
create.jdbc.connection.pool.description=Text providing details about the specified JDBC connection pool.
create.jdbc.connection.pool.property=Optional attribute name/value pairs for configuring the connection pool.
create.jdbc.connection.pool.jdbc_connection_pool_id=The name of the JDBC connection pool to be created.
create.jdbc.connection.pool.success=JDBC connection pool {0} created successfully.
create.jdbc.connection.pool.fail=JDBC connection pool {0} creation failed.
create.jdbc.connection.pool.duplicate=A JDBC connection pool named {0} already exists.
delete.jdbc.connection.pool=removes the specified JDBC connection pool
delete.jdbc.connection.pool.cascade=If the option is set to true, all the JDBC resources associated with the pool, apart from the pool itself, are deleted. When set to false, the deletion of pool fails if any resources are associated with the pool. Resources must be deleted explicitly or the option must be set to true. By default, the option is false.
delete.jdbc.connection.pool.jdbc_connection_pool_id=The name of the JDBC resource to be removed.
delete.jdbc.connection.pool.success=Command delete-jdbc-connection-pool executed successfully.
delete.jdbc.connection.pool.fail=Command delete-jdbc-connection-pool failed.
delete.jdbc.connection.pool.notfound=A JDBC connection pool named {0} does not exist.
delete.jdbc.connection.pool.noJndiName=No id defined for JDBC Connection pool.
delete.jdbc.connection.pool.pool_in_use=Some jdbc resources or persistence manager factory resources are referencing this connection pool. Use 'cascade' option to delete them as well.
list.jdbc.connection.pools=lists all JDBC connection pools
list.jdbc.connection.pools.success=Command list-jdbc-connection-pools executed successfully.
list.jdbc.connection.pools.fail=Command list-jdbc-connection-pools failed
create.resource.ref=creates a reference to a resource
create.resource.ref.success=Command create-resource-ref executed successfully.
create.resource.ref.failed=Command create-resource-ref failed.
create.resource.ref.enabled=Indicates whether the resource should be enabled. This value will take effect only if the resource is enabled at the global level. The default is true.
create.resource.ref.reference_name=The name or JNDI name of the resource.
create.resource.ref.existsAlready=Resource reference {0} already exists.
create.resource.ref.resourceDoesNotExist=Resource {0} does not exist.
delete.resource.ref=removes a reference to a resource
delete.resource.ref.reference_name=The name or JNDI name of the resource.
delete.resource.ref.doesNotExist=Resource reference {0} does not exist.
delete.resource.ref.failed=Resource ref {0} deletion failed.
delete.resource.ref.success=Resource ref {0} deleted successfully.
list.resource.refs=lists the existing resource references
list.resource.refs.success=Command list-resource-refs executed successfully.
list.resource.refs.fail=Command list-resource-refs failed.

create.profiler=Creates the profiler element. A server instance is tied to a particular  profiler, by the profiler element in the Java configuration. Changing a profiler requires you to restart the server.
create.profiler.classpath=Java classpath string that specifies the classes needed by the profiler.
create.profiler.enabled=Profiler is enabled by default.
create.profiler.nativelibrarypath=This path is automatically constructed to be a concatenation of the Application Serverm installation relative path for its native shared libraries, standard JRE native library path, the shell environment setting (LD_LIBRARY_PATH on UNIX) and any path that may be specified in the profile element.
create.profiler.name=Name of the profiler.
create.profiler.properties=Name/value  pairs  of   provider specific attributes.
create.profiler.target=This option specifies the target on which you are creating a profiler.
create.profiler.usagetext=create-profiler\n\t[--classpath <classpath>] [--enabled[=<enabled(default:true)>]]\n\t[--nativelibrarypath <nativelibrarypath>]\n\t[--property (name=value)[:name=value]*]\n\t[--target <target(default:server)>] [-?|--help[=<help(default:false)>]]\n\tprofiler_name
delete.profiler=The delete-profiler command deletes the profiler element  you specify.  A server instance is tied to a particular profiler by the profiler element in the Java configuration. Changing a profiler requires you to restart the server.
delete.profiler.target=This option specifies the target profiler  element  which you are deleting.
#Error Messages
CouldNotCreateParamTokenizer=Could not create ParamTokenizer object.
InvalidPropertySyntax=Invalid property syntax: {0}
UnclosedString=Unclosed string value.
NothingToList=Nothing to list.
FileNotFound=The system cannot find the path specified: {0}

create.ssl.http.notfound=Network Listener named {0} to which this ssl element is being added does not exist.
create.ssl.iiop.notfound=IIOP Listener named {0} to which this ssl element is being added does not exist.
create.ssl.http.alreadyExists=Network Listener named {0} to which this ssl element is being added already has an ssl element.
create.ssl.iiop.alreadyExists=IIOP Listener named {0} to which this ssl element is being added already has an ssl element.
create.ssl.fail=Creation of Ssl in {0} failed.
create.ssl.success=Creation of Ssl in {0} completed successfully.
delete.ssl.fail=Deletion of Ssl in {0} failed.
delete.ssl.success=Deletion of Ssl in {0} completed successfully.
delete.ssl.http.listener.notfound=Network Listener named {0} not found. 
delete.ssl.iiop.listener.notfound=IIOP Listener named {0} not found
delete.ssl.element.doesnotexist=Ssl element does not exist for Listener named {0}.


ping.connection.pool.pool_name=Name of the JDBC Connection Pool to be pinged.
ping.connection.pool.success=Ping JDBC Connection Pool for {0} is Successful.
ping.connection.pool.fail=Ping JDBC Connection Pool for {0} is Failed.

commandrunner.operand.required=Operand required.
admin.param.missing={0} command requires the {1} parameter : {2}.
admin.param.missing.nodesc={0} command requires the {1} parameter.
admin.param.missing.nofound=Cannot find {1} in {0} command model, file a bug

admin.set.invalid.attribute=Invalid attribute {0}
admin.set.invalid.attributename=Invalid attribute name {0}
admin.set.reject.keychange=Cannot change a primary key\nChange of {0}
admin.set.configuration.notfound=No configuration found for {0}
admin.set.attribute.change.failure=Could not change the attributes: {0}
admin.set.delete.property.failure=Could not delete the property: {0}
admin.set.invalid.namevalue=Invalid name value pair {0}. Missing expected equal sign.
admin.get.path.notfound=Dotted name path {0} not found.
admin.get.invalid.pattern=Match pattern is invalid or null
admin.get.no.monitoring=Monitoring facility not installed

create.system.properties=adds or updates one or more system properties of the domain, configuration, cluster, or server instance
create.system.properties.name_value=The name value pairs (separated by the ':' character) of the system properties to add to the specified target. If any of the system properties were previously defined, it will be updated with the newly specified value.
create.system.properties.usagetext=create-system-properties\n\t[--target <target(default:server)>] [-?|--help[=<help(default:false)>]]\n\t(name=value)[:name=value]* 
create.system.properties.existsAlready=System property {0} already exists.
create.system.properties.failed=System property {0} creation failed.
create.system.properties.success=System property {0} created successfully.
delete.system.property=removes one system property of the domain, configuration, cluster, or server instance, at a time
delete.system.property.property_name=The name of the system property to remove.
delete.system.property.doesNotExist=System property {0} does not exist.
delete.system.property.success=Deletion of system property {0} executed successfully.
delete.system.property.failed=Deletion of system property {0} failed.
list.system.properties=lists the system properties of the domain, configuration, cluster, or server instance
list.system.properties.success=Command list-system-properties executed successfully.
list.system.properties.fail=Command list-system-properties failed.
invalid.target.sys.props=Invalid target:{0}. Valid targets are ''domain'' and a server named ''server'' (default). 
no.such.property=System Property named {0} does not exist at the given target {1}
delete.sysprops.ok=System Property named {0} deleted from given target {1}. Make sure you check its references.
list.ok=The target {0} contains following {1} system properties
cant.delete.referenced.property=System Property {0} is referenced by {1} in the configuration. Please remove the references first.

uptime=Returns how long the server has been running.
uptime.command=Returns how long the server has been running.
uptime.output=Uptime: {0}, Total milliseconds: {1}

create.audit.module.duplicatefound=AuditModule named {0} exists. Cannot add duplicate AuditModule.
create.audit.module.fail=Creation of AuditModule {0} failed
create.audit.module.success=Creation of AuditModule {0} completed successfully
list.audit.module.success=Command list-audit-modules executed successfully
delete.audit.module.notfound=Specified Audit Module {0} not found
delete.audit.module.fail=Deletion of Audit Module {0} failed
delete.audit.module.success=Deletion of Audit Module {0} completed successfully

create.message.security.provider.duplicatefound=Message security provider named {0} exists. Cannot add duplicate.
create.message.security.provider.fail=Creation of message security provider named {0} failed.
create.message.security.provider.success=Creation of message security provider named {0} completed successfully.

delete.message.security.provider.confignotfound= A Message security config does not exist for the layer {0}
delete.message.security.provider.fail=Deletion of message security provider named {0} failed
delete.message.security.provider.success=Deletion of message security provider {0} completed successfully

list.message.security.provider.success=list-message-security-providers successful

set.usagetext=set [-?|--help[=<help(default:false)>]]\n\t(dotted-attribute-name=value)+
version={0}
version.verbose={0}, JRE version {1}

create.ssl.listenerid.missing=Listener id needs to be specified
create.ssl.iiopsvc.alreadyExists=IIOP Service already has been configured with SSL configuration.
delete.ssl.element.doesnotexistforiiop=Ssl element does not exist for IIOP service
