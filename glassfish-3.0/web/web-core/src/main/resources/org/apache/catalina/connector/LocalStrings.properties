#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2008 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License. You can obtain
# a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
# or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
# Sun designates this particular file as subject to the "Classpath" exception
# as provided by Sun in the GPL Version 2 section of the License file that
# accompanied this code.  If applicable, add the following below the License
# Header, with the fields enclosed by brackets [] replaced by your own
# identifying information: "Portions Copyrighted [year]
# [name of copyright owner]"
#
# Contributor(s):
#
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#
#
# This file incorporates work covered by the following copyright and
# permission notice:
#
# Copyright 2004 The Apache Software Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Message IDs reserved for this file: PWC6600-PWC6624
#
object.invalidScope=PWC6600: Cannot use this object outside a servlet's service method or outside a filter's doFilter method

#
# Message IDs reserved for this file: PWC3980-PWC4209
#
coyoteConnector.alreadyInitialized=PWC3980: The connector has already been initialized
coyoteConnector.alreadyStarted=PWC3981: The connector has already been started
coyoteConnector.cannotRegisterProtocol=PWC3982: Cannot register MBean for the Protocol
coyoteConnector.notStarted=PWC3983: Coyote connector has not been started
coyoteConnector.protocolHandlerDestroyFailed=PWC3984: Protocol handler destroy failed: {0}
coyoteConnector.protocolHandlerInitializationFailed=PWC3985: Protocol handler initialization failed: {0}
coyoteConnector.protocolHandlerInstantiationFailed=PWC3986: Protocol handler instantiation failed: {0}
coyoteConnector.protocolHandlerStartFailed=PWC3987: Protocol handler start failed: {0}
coyoteConnector.protocolRegistrationFailed=PWC3988: Protocol JMX registration failed
coyoteConnector.illegalAdapter=PWC4015: mod_jk invalid Adapter implementation: {0} 
coyoteAdapter.service=PWC3989: An exception or error occurred in the container during the request processing
coyoteResponse.getOutputStream.ise=PWC3990: getWriter() has already been called for this response
coyoteResponse.getWriter.ise=PWC3991: getOutputStream() has already been called for this response
coyoteResponse.resetBuffer.ise=PWC3992: Cannot reset buffer after response has been committed
coyoteResponse.sendError.ise=PWC3993: Cannot call sendError() after the response has been committed
coyoteResponse.sendRedirect.ise=PWC3994: Cannot call sendRedirect() after the response has been committed
coyoteResponse.setBufferSize.ise=PWC3995: Cannot change buffer size after data has been written
responseFacade.nullResponse=PWC3996: Null response object
coyoteRequest.getInputStream.ise=PWC3997: getReader() has already been called for this request
coyoteRequest.getReader.ise=PWC3998: getInputStream() has already been called for this request
coyoteRequest.sessionCreateCommitted=PWC3999: Cannot create a session after the response has been committed
coyoteRequest.setAttribute.namenull=PWC4000: Cannot call setAttribute with a null name
coyoteRequest.listenerStart=PWC4001: Exception sending context initialized event to listener instance of class {0}
coyoteRequest.listenerStop=PWC4002: Exception sending context destroyed event to listener instance of class {0}
coyoteRequest.attributeEvent=PWC4003: Exception thrown by attributes event listener
coyoteRequest.postTooLarge=PWC4004: Parameters were not parsed because the size of the posted data was too big. Use the maxPostSize attribute of the connector to resolve this if the application should accept large POSTs.
requestFacade.nullRequest=PWC4005: Must not use request object outside the scope of a servlet's service or a filter's doFilter method
mapperListener.registerContext=PWC4006: Register Context {0}
mapperListener.unregisterContext=PWC4007: Unregister Context {0}
mapperListener.registerWrapper=PWC4008: Register Wrapper {0} in Context {1}
coyoteAdapter.proxyAuthCertError=PWC4009: Error parsing client cert chain into array of java.security.cert.X509Certificate instances
coyoteAdapter.listenerOff=PWC4010: HTTP listener on port {0} has been disabled
coyoteRequest.setCharacterEncoding.ise=PWC4011: Unable to set request character encoding to {0} from context {1}, because request parameters have already been read, or ServletRequest.getReader() has already been called
coyoteRequest.unknownHost=PWC4012: Unable to resolve IP address {0} into host name
coyoteRequest.nullRemoteAddressFromProxy=PWC4013: Unable to determine client remote address from proxy (returns null)
object.invalidScope=PWC4014: Cannot use this object outside a servlet's service method or outside a filter's doFilter method
inputBuffer.streamClosed=PWC4015: Stream closed

#
# Messages related to async processing mode
#
async.dispatchInProgress=Asynchronous dispatch already in progress, must call ServletRequest.startAsync first
async.addListenerIllegalState=Must not call AsyncContext.addListener after the container-initiated dispatch during which ServletRequest.startAsync was called has returned to the container
async.setTimeoutIllegalState=Must not call AsyncContext.setTimeout after the container-initiated dispatch during which ServletRequest.startAsync was called has returned to the container
request.notInAsyncMode=The request has not been put into asynchronous mode, must call ServletRequest.startAsync first
request.startAsync.notSupported=Request is within the scope of a filter or servlet that does not support asynchronous operations
request.startAsync.alreadyCalled=ServletRequest.startAsync called again without any asynchronous dispatch, or called outside the scope of any such dispatch, or called again within the scope of the same dispatch
request.startAsync.alreadyComplete=Response already closed
request.startAsync.notInScope=ServletRequest.startAsync called outside the scope of an async dispatch
request.asyncComplete.alreadyComplete=Request already released from asynchronous mode
