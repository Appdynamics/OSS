<?xml version="1.0" encoding="iso-8859-1"?>
<!--
The contents of this file are subject to the terms
of the Common Development and Distribution License
(the "License").  You may not use this file except
in compliance with the License.

You can obtain a copy of the license at
glassfish/bootstrap/legal/CDDLv1.0.txt or
https://glassfish.dev.java.net/public/CDDLv1.0.html.
See the License for the specific language governing
permissions and limitations under the License.

When distributing Covered Code, include this CDDL
HEADER in each file and include the License file at
glassfish/bootstrap/legal/CDDLv1.0.txt.  If applicable,
add the following below this CDDL HEADER, with the
fields enclosed by brackets "[]" replaced with your
own identifying information: Portions Copyright [yyyy]
[name of copyright owner]
-->
<project name="IPS repository initial setup" default="default.target" basedir=".">
    
    <target name="default.target">
	    <mkdir dir="target/source"/>
	    <echo message="Populating IPS repository" />
    </target>

    <target name="copy.packages">

        <echo message="Copying MQ packages" />
	<resolveArtifact artifactId="mq-distribution" groupId="org.glassfish" type="zip" classifier="repo" property="mqrepo.zip"/>
   

        <unzip src="${mqrepo.zip}" dest="target/source/mq">   
	</unzip>
        <!-- adjusting catalog permissions since UC 2.3 copypkgs fails
            otherwise -->

        <chmod file="target/source/mq/catalog/attrs" perm="644"/>
        <chmod file="target/source/mq/catalog/catalog" perm="644"/>

	<echo message="Target repo dir is ${target.repo.dir}" />

	<!-- copy over MQ packages -->
	<exec dir="target/source/mq" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} mq-core" />
	</exec>
        <exec dir="target/source/mq" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} mq-server" />
	</exec>
	 <exec dir="target/source/mq" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} mq-bin-sh" />
	</exec>
	 <exec dir="target/source/mq" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} mq-bin-exe" />
	</exec>
	<exec dir="target/source/mq" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} mq-config-gf" />
	</exec>
        <exec dir="target/source/mq" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} mq-locale" />
	</exec>
	<exec dir="target/source/mq" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} mq-docs" />
	</exec>
	<exec dir="target/source/mq" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} mq-branding" />
	</exec>
	
	<echo message="Copying JavaDB common package" />
	
	<resolveArtifact artifactId="javadb-common" groupId="javadb" type="zip" classifier="ips" property="javadb-common.zip"/>
        <unzip src="${javadb-common.zip}" dest="target/source/javadb-common"/>   
	<chmod file="target/source/javadb-common/catalog/attrs" perm="644"/>
        <chmod file="target/source/javadb-common/catalog/catalog" perm="644"/>
        <exec dir="target/source/javadb-common" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} javadb-common" />
	</exec>
	
	<echo message="Copying JavaDB core package" />
	
	<resolveArtifact artifactId="javadb-core" groupId="javadb" type="zip" classifier="ips" property="javadb-core.zip"/>
        <unzip src="${javadb-core.zip}" dest="target/source/javadb-core"/>   
	<chmod file="target/source/javadb-core/catalog/attrs" perm="644"/>
        <chmod file="target/source/javadb-core/catalog/catalog" perm="644"/>
        <exec dir="target/source/javadb-core" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} javadb-core" />
	</exec>
	
	<echo message="Copying JavaDB client package" />
	
	<resolveArtifact artifactId="javadb-client" groupId="javadb" type="zip" classifier="ips" property="javadb-client.zip"/>
        <unzip src="${javadb-client.zip}" dest="target/source/javadb-client"/>   
	<chmod file="target/source/javadb-client/catalog/attrs" perm="644"/>
        <chmod file="target/source/javadb-client/catalog/catalog" perm="644"/>
        <exec dir="target/source/javadb-client" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} javadb-client" />
	</exec>
	
	<echo message="Copying JavaDB demo package" />
	
	<resolveArtifact artifactId="javadb-demo" groupId="javadb" type="zip" classifier="ips" property="javadb-demo.zip"/>
        <unzip src="${javadb-demo.zip}" dest="target/source/javadb-demo"/>   
	<chmod file="target/source/javadb-demo/catalog/attrs" perm="644"/>
        <chmod file="target/source/javadb-demo/catalog/catalog" perm="644"/>
        <exec dir="target/source/javadb-demo" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} javadb-demo" />
	</exec>
	
	<echo message="Copying JavaDB doc package" />
	
	<resolveArtifact artifactId="javadb-doc" groupId="javadb" type="zip" classifier="ips" property="javadb-doc.zip"/>
        <unzip src="${javadb-doc.zip}" dest="target/source/javadb-doc"/>   
	<chmod file="target/source/javadb-doc/catalog/attrs" perm="644"/>
        <chmod file="target/source/javadb-doc/catalog/catalog" perm="644"/>
        <exec dir="target/source/javadb-doc" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} javadb-doc" />
	</exec>

        <echo message="Copying JavaDB javadoc package" />
	
	<resolveArtifact artifactId="javadb-javadoc" groupId="javadb" type="zip" classifier="ips" property="javadb-javadoc.zip"/>
        <unzip src="${javadb-javadoc.zip}" dest="target/source/javadb-javadoc"/>   
	<chmod file="target/source/javadb-javadoc/catalog/attrs" perm="644"/>
        <chmod file="target/source/javadb-javadoc/catalog/catalog" perm="644"/>
        <exec dir="target/source/javadb-javadoc" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} javadb-javadoc" />
	</exec>
	
	<echo message="Copying l10n packages" />
	<resolveArtifact artifactId="l10n-distribution" groupId="org.glassfish.l10n" type="zip"  property="l10nrepo.zip"/>
   

        <unzip src="${l10nrepo.zip}" dest="target/source/l10n">   
	</unzip>
	
	<chmod file="target/source/l10n/catalog/attrs" perm="644"/>
        <chmod file="target/source/l10n/catalog/catalog" perm="644"/>
        
        <exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-web-l10n" />
	</exec>
	<exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-upgrade-l10n" />
	</exec>
	<exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-scripting-l10n" />
	</exec>
	<exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-nucleus-l10n" />
	</exec>
	<exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-jts-l10n" />
	</exec>
	<exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-jms-l10n" />
	</exec>
	<exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-jdbc-l10n" />
	</exec>
	<exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-jca-l10n" />
	</exec>
	<exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-gui-l10n" />
	</exec>
	<exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-ejb-lite-l10n" />
	</exec>
	<exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-ejb-l10n" />
	</exec>
	<exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-common-l10n" />
	</exec>
	<exec dir="target/source/l10n" executable="python" failonerror="true">
		<arg line="${uc.toolkit.dir}/pkg/bin/copypkgs.py -s . -d ${target.repo.dir} glassfish-common-full-l10n" />
	</exec>

    </target>
</project>

