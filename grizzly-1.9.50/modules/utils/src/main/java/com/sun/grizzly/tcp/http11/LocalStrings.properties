#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2007-2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#
# Message IDs reserved for this file: 4650-4869
#
# $Id: LocalStrings.properties,v 1.3 2006/11/16 17:07:34 jfarcand Exp $

# language 

# package org.apache.coyote.http11

#
# Http11Protocol
#

http11protocol.endpoint.initerror=Error initializing endpoint
http11protocol.endpoint.starterror=Error starting endpoint
http11protocol.init=Initializing {1} on port {0}
http11protocol.proto.error=Error reading request, ignored
http11protocol.proto.ioexception.debug=IOException reading request
http11protocol.proto.ioexception.info=IOException reading request, ignored
http11protocol.proto.socketexception.debug=SocketException reading request
http11protocol.proto.socketexception.info=SocketException reading request, ignored
http11protocol.setattribute=Attribute {0}: {1}
http11protocol.socketfactory.initerror=Error initializing socket factory
http11protocol.start=Starting {1} on port {0}

#
# Http11Processor
#

#
# InternalInputBuffer
#

iib.eof.error=Unexpected EOF read on the socket


#
# CoyoteConnector
#

coyoteConnector.alreadyInitialized=The connector has already been initialized
coyoteConnector.alreadyStarted=The connector has already been started
coyoteConnector.cannotRegisterProtocol=Cannot register MBean for the Protocol
coyoteConnector.notStarted=Coyote connector has not been started
coyoteConnector.protocolHandlerDestroyFailed=Protocol handler destroy failed: {0}
coyoteConnector.protocolHandlerInitializationFailed=Protocol handler initialization failed: {0}
coyoteConnector.protocolHandlerInstantiationFailed=Protocol handler instantiation failed: {0}
coyoteConnector.protocolHandlerStartFailed=Protocol handler start failed: {0}
coyoteConnector.protocolRegistrationFailed=Protocol JMX registration failed

#
# CoyoteAdapter
#

coyoteAdapter.service=An exception or error occurred in the container during the request processing
coyoteAdapter.proxyAuthCertError=Error parsing client cert chain into array of java.security.cert.X509Certificate instances
coyoteAdapter.listenerOff=HTTP listener on port {0} has been disabled

#
# CoyoteResponse
#

coyoteResponse.getOutputStream.ise=getWriter() has already been called for this response
coyoteResponse.getWriter.ise=getOutputStream() has already been called for this response
coyoteResponse.resetBuffer.ise=Cannot reset buffer after response has been committed
coyoteResponse.sendError.ise=Cannot call sendError() after the response has been committed
coyoteResponse.sendRedirect.ise=Cannot call sendRedirect() after the response has been committed
coyoteResponse.setBufferSize.ise=Cannot change buffer size after data has been written
responseFacade.nullResponse=Null response object

#
# CoyoteRequest
#

coyoteRequest.getInputStream.ise=getReader() has already been called for this request
coyoteRequest.getReader.ise=getInputStream() has already been called for this request
coyoteRequest.setCharacterEncoding.ise=Unable to set character encoding {0} because request parameters have already been read, or ServletRequest.getReader() has been called
coyoteRequest.sessionCreateCommitted=Cannot create a session after the response has been committed
coyoteRequest.setAttribute.namenull=Cannot call setAttribute with a null name
coyoteRequest.listenerStart=Exception sending context initialized event to listener instance of class {0}
coyoteRequest.listenerStop=Exception sending context destroyed event to listener instance of class {0}
coyoteRequest.attributeEvent=Exception thrown by attributes event listener
coyoteRequest.postTooLarge=Parameters were not parsed because the size of the posted data was too big. Use the maxPostSize attribute of the connector to resolve this if the application should accept large POSTs.
requestFacade.nullRequest=Null request object
coyoteRequest.unknownHost=Unable to resolve IP address {0} into host name
coyoteRequest.nullRemoteAddressFromProxy=Unable to determine client remote address from proxy (returns null)

#
# MapperListener
#

mapperListener.registerContext=Register Context {0}
mapperListener.unregisterContext=Unregister Context {0}
mapperListener.registerWrapper=Register Wrapper {0} in Context {1}



