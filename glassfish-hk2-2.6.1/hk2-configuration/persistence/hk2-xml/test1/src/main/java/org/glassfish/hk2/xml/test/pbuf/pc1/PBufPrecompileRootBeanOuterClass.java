/*
 * Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/glassfish/hk2/xml/test/pbuf/pc1/PBufPrecompileRootBean.proto

package org.glassfish.hk2.xml.test.pbuf.pc1;

public final class PBufPrecompileRootBeanOuterClass {
  private PBufPrecompileRootBeanOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PBufPrecompileRootBeanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBean)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * This is a multiline comment
     * wherein there are multiple lines
     * for this comment.  I will supply now a limerick
     * There was a young man so benighted
     * He never knew when he was slighted;
     * He would go to a party
     * And eat just as hearty,
     * As if he'd been really invited.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * This is a multiline comment
     * wherein there are multiple lines
     * for this comment.  I will supply now a limerick
     * There was a young man so benighted
     * He never knew when he was slighted;
     * He would go to a party
     * And eat just as hearty,
     * As if he'd been really invited.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 itype = 2;</code>
     */
    int getItype();

    /**
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
     */
    java.util.List<org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2>
        getRemoteTypesList();
    /**
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
     */
    org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2 getRemoteTypes(int index);
    /**
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
     */
    int getRemoteTypesCount();
    /**
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
     */
    java.util.List<? extends org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2OrBuilder>
        getRemoteTypesOrBuilderList();
    /**
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
     */
    org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2OrBuilder getRemoteTypesOrBuilder(
        int index);

    /**
     * <pre>
     * This is a single line comment
     * </pre>
     *
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
     */
    java.util.List<org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild>
        getLocalTypesList();
    /**
     * <pre>
     * This is a single line comment
     * </pre>
     *
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
     */
    org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild getLocalTypes(int index);
    /**
     * <pre>
     * This is a single line comment
     * </pre>
     *
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
     */
    int getLocalTypesCount();
    /**
     * <pre>
     * This is a single line comment
     * </pre>
     *
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
     */
    java.util.List<? extends org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChildOrBuilder>
        getLocalTypesOrBuilderList();
    /**
     * <pre>
     * This is a single line comment
     * </pre>
     *
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
     */
    org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChildOrBuilder getLocalTypesOrBuilder(
        int index);

    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean first_thing = 5;</code>
     */
    org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean getFirstThing();
    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean first_thing = 5;</code>
     */
    org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBeanOrBuilder getFirstThingOrBuilder();

    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean second_thing = 6;</code>
     */
    org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean getSecondThing();
    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean second_thing = 6;</code>
     */
    org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBeanOrBuilder getSecondThingOrBuilder();

    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBean third_thing = 7;</code>
     */
    org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean getThirdThing();
    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBean third_thing = 7;</code>
     */
    org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBeanOrBuilder getThirdThingOrBuilder();

    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBean fourth_thing = 8;</code>
     */
    org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean getFourthThing();
    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBean fourth_thing = 8;</code>
     */
    org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBeanOrBuilder getFourthThingOrBuilder();

    /**
     * <code>string fifth_thing = 9;</code>
     */
    java.lang.String getFifthThing();
    /**
     * <code>string fifth_thing = 9;</code>
     */
    com.google.protobuf.ByteString
        getFifthThingBytes();

    public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean.FirstOneOfCase getFirstOneOfCase();

    public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean.SecondOneOfCase getSecondOneOfCase();
  }
  /**
   * <pre>
   * Copyright (c) 2017 Oracle and/or its affiliates. All rights reserved.
   * This program and the accompanying materials are made available under the
   * terms of the Eclipse Public License v. 2.0, which is available at
   * http://www.eclipse.org/legal/epl-2.0.
   * This Source Code may also be made available under the following Secondary
   * Licenses when the conditions for such availability set forth in the
   * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
   * version 2 with the GNU Classpath Exception, which is available at
   * https://www.gnu.org/software/classpath/license.html.
   * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
   * This is a comment on the root bean
   * </pre>
   *
   * Protobuf type {@code org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBean}
   */
  public  static final class PBufPrecompileRootBean extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBean)
      PBufPrecompileRootBeanOrBuilder {
    // Use PBufPrecompileRootBean.newBuilder() to construct.
    private PBufPrecompileRootBean(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PBufPrecompileRootBean() {
      name_ = "";
      itype_ = 0;
      remoteTypes_ = java.util.Collections.emptyList();
      localTypes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PBufPrecompileRootBean(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              itype_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                remoteTypes_ = new java.util.ArrayList<org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2>();
                mutable_bitField0_ |= 0x00000004;
              }
              remoteTypes_.add(
                  input.readMessage(org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                localTypes_ = new java.util.ArrayList<org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild>();
                mutable_bitField0_ |= 0x00000008;
              }
              localTypes_.add(
                  input.readMessage(org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.parser(), extensionRegistry));
              break;
            }
            case 42: {
              org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.Builder subBuilder = null;
              if (firstOneOfCase_ == 5) {
                subBuilder = ((org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_).toBuilder();
              }
              firstOneOf_ =
                  input.readMessage(org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_);
                firstOneOf_ = subBuilder.buildPartial();
              }
              firstOneOfCase_ = 5;
              break;
            }
            case 50: {
              org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.Builder subBuilder = null;
              if (firstOneOfCase_ == 6) {
                subBuilder = ((org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_).toBuilder();
              }
              firstOneOf_ =
                  input.readMessage(org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_);
                firstOneOf_ = subBuilder.buildPartial();
              }
              firstOneOfCase_ = 6;
              break;
            }
            case 58: {
              org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.Builder subBuilder = null;
              if (secondOneOfCase_ == 7) {
                subBuilder = ((org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean) secondOneOf_).toBuilder();
              }
              secondOneOf_ =
                  input.readMessage(org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean) secondOneOf_);
                secondOneOf_ = subBuilder.buildPartial();
              }
              secondOneOfCase_ = 7;
              break;
            }
            case 66: {
              org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.Builder subBuilder = null;
              if (secondOneOfCase_ == 8) {
                subBuilder = ((org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean) secondOneOf_).toBuilder();
              }
              secondOneOf_ =
                  input.readMessage(org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean) secondOneOf_);
                secondOneOf_ = subBuilder.buildPartial();
              }
              secondOneOfCase_ = 8;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();
              secondOneOfCase_ = 9;
              secondOneOf_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          remoteTypes_ = java.util.Collections.unmodifiableList(remoteTypes_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          localTypes_ = java.util.Collections.unmodifiableList(localTypes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.internal_static_org_glassfish_hk2_xml_test_pbuf_pc1_PBufPrecompileRootBean_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.internal_static_org_glassfish_hk2_xml_test_pbuf_pc1_PBufPrecompileRootBean_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean.class, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean.Builder.class);
    }

    private int bitField0_;
    private int firstOneOfCase_ = 0;
    private java.lang.Object firstOneOf_;
    public enum FirstOneOfCase
        implements com.google.protobuf.Internal.EnumLite {
      FIRST_THING(5),
      SECOND_THING(6),
      FIRSTONEOF_NOT_SET(0);
      private final int value;
      private FirstOneOfCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FirstOneOfCase valueOf(int value) {
        return forNumber(value);
      }

      public static FirstOneOfCase forNumber(int value) {
        switch (value) {
          case 5: return FIRST_THING;
          case 6: return SECOND_THING;
          case 0: return FIRSTONEOF_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public FirstOneOfCase
    getFirstOneOfCase() {
      return FirstOneOfCase.forNumber(
          firstOneOfCase_);
    }

    private int secondOneOfCase_ = 0;
    private java.lang.Object secondOneOf_;
    public enum SecondOneOfCase
        implements com.google.protobuf.Internal.EnumLite {
      THIRD_THING(7),
      FOURTH_THING(8),
      FIFTH_THING(9),
      SECONDONEOF_NOT_SET(0);
      private final int value;
      private SecondOneOfCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SecondOneOfCase valueOf(int value) {
        return forNumber(value);
      }

      public static SecondOneOfCase forNumber(int value) {
        switch (value) {
          case 7: return THIRD_THING;
          case 8: return FOURTH_THING;
          case 9: return FIFTH_THING;
          case 0: return SECONDONEOF_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SecondOneOfCase
    getSecondOneOfCase() {
      return SecondOneOfCase.forNumber(
          secondOneOfCase_);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * This is a multiline comment
     * wherein there are multiple lines
     * for this comment.  I will supply now a limerick
     * There was a young man so benighted
     * He never knew when he was slighted;
     * He would go to a party
     * And eat just as hearty,
     * As if he'd been really invited.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * This is a multiline comment
     * wherein there are multiple lines
     * for this comment.  I will supply now a limerick
     * There was a young man so benighted
     * He never knew when he was slighted;
     * He would go to a party
     * And eat just as hearty,
     * As if he'd been really invited.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ITYPE_FIELD_NUMBER = 2;
    private int itype_;
    /**
     * <code>int32 itype = 2;</code>
     */
    public int getItype() {
      return itype_;
    }

    public static final int REMOTE_TYPES_FIELD_NUMBER = 3;
    private java.util.List<org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2> remoteTypes_;
    /**
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
     */
    public java.util.List<org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2> getRemoteTypesList() {
      return remoteTypes_;
    }
    /**
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
     */
    public java.util.List<? extends org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2OrBuilder>
        getRemoteTypesOrBuilderList() {
      return remoteTypes_;
    }
    /**
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
     */
    public int getRemoteTypesCount() {
      return remoteTypes_.size();
    }
    /**
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
     */
    public org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2 getRemoteTypes(int index) {
      return remoteTypes_.get(index);
    }
    /**
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
     */
    public org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2OrBuilder getRemoteTypesOrBuilder(
        int index) {
      return remoteTypes_.get(index);
    }

    public static final int LOCAL_TYPES_FIELD_NUMBER = 4;
    private java.util.List<org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild> localTypes_;
    /**
     * <pre>
     * This is a single line comment
     * </pre>
     *
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
     */
    public java.util.List<org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild> getLocalTypesList() {
      return localTypes_;
    }
    /**
     * <pre>
     * This is a single line comment
     * </pre>
     *
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
     */
    public java.util.List<? extends org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChildOrBuilder>
        getLocalTypesOrBuilderList() {
      return localTypes_;
    }
    /**
     * <pre>
     * This is a single line comment
     * </pre>
     *
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
     */
    public int getLocalTypesCount() {
      return localTypes_.size();
    }
    /**
     * <pre>
     * This is a single line comment
     * </pre>
     *
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
     */
    public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild getLocalTypes(int index) {
      return localTypes_.get(index);
    }
    /**
     * <pre>
     * This is a single line comment
     * </pre>
     *
     * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
     */
    public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChildOrBuilder getLocalTypesOrBuilder(
        int index) {
      return localTypes_.get(index);
    }

    public static final int FIRST_THING_FIELD_NUMBER = 5;
    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean first_thing = 5;</code>
     */
    public org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean getFirstThing() {
      if (firstOneOfCase_ == 5) {
         return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_;
      }
      return org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance();
    }
    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean first_thing = 5;</code>
     */
    public org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBeanOrBuilder getFirstThingOrBuilder() {
      if (firstOneOfCase_ == 5) {
         return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_;
      }
      return org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance();
    }

    public static final int SECOND_THING_FIELD_NUMBER = 6;
    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean second_thing = 6;</code>
     */
    public org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean getSecondThing() {
      if (firstOneOfCase_ == 6) {
         return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_;
      }
      return org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance();
    }
    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean second_thing = 6;</code>
     */
    public org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBeanOrBuilder getSecondThingOrBuilder() {
      if (firstOneOfCase_ == 6) {
         return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_;
      }
      return org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance();
    }

    public static final int THIRD_THING_FIELD_NUMBER = 7;
    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBean third_thing = 7;</code>
     */
    public org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean getThirdThing() {
      if (secondOneOfCase_ == 7) {
         return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean) secondOneOf_;
      }
      return org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.getDefaultInstance();
    }
    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBean third_thing = 7;</code>
     */
    public org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBeanOrBuilder getThirdThingOrBuilder() {
      if (secondOneOfCase_ == 7) {
         return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean) secondOneOf_;
      }
      return org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.getDefaultInstance();
    }

    public static final int FOURTH_THING_FIELD_NUMBER = 8;
    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBean fourth_thing = 8;</code>
     */
    public org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean getFourthThing() {
      if (secondOneOfCase_ == 8) {
         return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean) secondOneOf_;
      }
      return org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.getDefaultInstance();
    }
    /**
     * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBean fourth_thing = 8;</code>
     */
    public org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBeanOrBuilder getFourthThingOrBuilder() {
      if (secondOneOfCase_ == 8) {
         return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean) secondOneOf_;
      }
      return org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.getDefaultInstance();
    }

    public static final int FIFTH_THING_FIELD_NUMBER = 9;
    /**
     * <code>string fifth_thing = 9;</code>
     */
    public java.lang.String getFifthThing() {
      java.lang.Object ref = "";
      if (secondOneOfCase_ == 9) {
        ref = secondOneOf_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (secondOneOfCase_ == 9) {
          secondOneOf_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string fifth_thing = 9;</code>
     */
    public com.google.protobuf.ByteString
        getFifthThingBytes() {
      java.lang.Object ref = "";
      if (secondOneOfCase_ == 9) {
        ref = secondOneOf_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (secondOneOfCase_ == 9) {
          secondOneOf_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (itype_ != 0) {
        output.writeInt32(2, itype_);
      }
      for (int i = 0; i < remoteTypes_.size(); i++) {
        output.writeMessage(3, remoteTypes_.get(i));
      }
      for (int i = 0; i < localTypes_.size(); i++) {
        output.writeMessage(4, localTypes_.get(i));
      }
      if (firstOneOfCase_ == 5) {
        output.writeMessage(5, (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_);
      }
      if (firstOneOfCase_ == 6) {
        output.writeMessage(6, (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_);
      }
      if (secondOneOfCase_ == 7) {
        output.writeMessage(7, (org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean) secondOneOf_);
      }
      if (secondOneOfCase_ == 8) {
        output.writeMessage(8, (org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean) secondOneOf_);
      }
      if (secondOneOfCase_ == 9) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, secondOneOf_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (itype_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, itype_);
      }
      for (int i = 0; i < remoteTypes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, remoteTypes_.get(i));
      }
      for (int i = 0; i < localTypes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, localTypes_.get(i));
      }
      if (firstOneOfCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_);
      }
      if (firstOneOfCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_);
      }
      if (secondOneOfCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean) secondOneOf_);
      }
      if (secondOneOfCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean) secondOneOf_);
      }
      if (secondOneOfCase_ == 9) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, secondOneOf_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean)) {
        return super.equals(obj);
      }
      org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean other = (org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && (getItype()
          == other.getItype());
      result = result && getRemoteTypesList()
          .equals(other.getRemoteTypesList());
      result = result && getLocalTypesList()
          .equals(other.getLocalTypesList());
      result = result && getFirstOneOfCase().equals(
          other.getFirstOneOfCase());
      if (!result) return false;
      switch (firstOneOfCase_) {
        case 5:
          result = result && getFirstThing()
              .equals(other.getFirstThing());
          break;
        case 6:
          result = result && getSecondThing()
              .equals(other.getSecondThing());
          break;
        case 0:
        default:
      }
      result = result && getSecondOneOfCase().equals(
          other.getSecondOneOfCase());
      if (!result) return false;
      switch (secondOneOfCase_) {
        case 7:
          result = result && getThirdThing()
              .equals(other.getThirdThing());
          break;
        case 8:
          result = result && getFourthThing()
              .equals(other.getFourthThing());
          break;
        case 9:
          result = result && getFifthThing()
              .equals(other.getFifthThing());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + ITYPE_FIELD_NUMBER;
      hash = (53 * hash) + getItype();
      if (getRemoteTypesCount() > 0) {
        hash = (37 * hash) + REMOTE_TYPES_FIELD_NUMBER;
        hash = (53 * hash) + getRemoteTypesList().hashCode();
      }
      if (getLocalTypesCount() > 0) {
        hash = (37 * hash) + LOCAL_TYPES_FIELD_NUMBER;
        hash = (53 * hash) + getLocalTypesList().hashCode();
      }
      switch (firstOneOfCase_) {
        case 5:
          hash = (37 * hash) + FIRST_THING_FIELD_NUMBER;
          hash = (53 * hash) + getFirstThing().hashCode();
          break;
        case 6:
          hash = (37 * hash) + SECOND_THING_FIELD_NUMBER;
          hash = (53 * hash) + getSecondThing().hashCode();
          break;
        case 0:
        default:
      }
      switch (secondOneOfCase_) {
        case 7:
          hash = (37 * hash) + THIRD_THING_FIELD_NUMBER;
          hash = (53 * hash) + getThirdThing().hashCode();
          break;
        case 8:
          hash = (37 * hash) + FOURTH_THING_FIELD_NUMBER;
          hash = (53 * hash) + getFourthThing().hashCode();
          break;
        case 9:
          hash = (37 * hash) + FIFTH_THING_FIELD_NUMBER;
          hash = (53 * hash) + getFifthThing().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Copyright (c) 2017 Oracle and/or its affiliates. All rights reserved.
     * This program and the accompanying materials are made available under the
     * terms of the Eclipse Public License v. 2.0, which is available at
     * http://www.eclipse.org/legal/epl-2.0.
     * This Source Code may also be made available under the following Secondary
     * Licenses when the conditions for such availability set forth in the
     * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
     * version 2 with the GNU Classpath Exception, which is available at
     * https://www.gnu.org/software/classpath/license.html.
     * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
     * This is a comment on the root bean
     * </pre>
     *
     * Protobuf type {@code org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBean}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBean)
        org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBeanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.internal_static_org_glassfish_hk2_xml_test_pbuf_pc1_PBufPrecompileRootBean_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.internal_static_org_glassfish_hk2_xml_test_pbuf_pc1_PBufPrecompileRootBean_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean.class, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean.Builder.class);
      }

      // Construct using org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRemoteTypesFieldBuilder();
          getLocalTypesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        itype_ = 0;

        if (remoteTypesBuilder_ == null) {
          remoteTypes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          remoteTypesBuilder_.clear();
        }
        if (localTypesBuilder_ == null) {
          localTypes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          localTypesBuilder_.clear();
        }
        firstOneOfCase_ = 0;
        firstOneOf_ = null;
        secondOneOfCase_ = 0;
        secondOneOf_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.internal_static_org_glassfish_hk2_xml_test_pbuf_pc1_PBufPrecompileRootBean_descriptor;
      }

      public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean getDefaultInstanceForType() {
        return org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean.getDefaultInstance();
      }

      public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean build() {
        org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean buildPartial() {
        org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean result = new org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        result.itype_ = itype_;
        if (remoteTypesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            remoteTypes_ = java.util.Collections.unmodifiableList(remoteTypes_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.remoteTypes_ = remoteTypes_;
        } else {
          result.remoteTypes_ = remoteTypesBuilder_.build();
        }
        if (localTypesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            localTypes_ = java.util.Collections.unmodifiableList(localTypes_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.localTypes_ = localTypes_;
        } else {
          result.localTypes_ = localTypesBuilder_.build();
        }
        if (firstOneOfCase_ == 5) {
          if (firstThingBuilder_ == null) {
            result.firstOneOf_ = firstOneOf_;
          } else {
            result.firstOneOf_ = firstThingBuilder_.build();
          }
        }
        if (firstOneOfCase_ == 6) {
          if (secondThingBuilder_ == null) {
            result.firstOneOf_ = firstOneOf_;
          } else {
            result.firstOneOf_ = secondThingBuilder_.build();
          }
        }
        if (secondOneOfCase_ == 7) {
          if (thirdThingBuilder_ == null) {
            result.secondOneOf_ = secondOneOf_;
          } else {
            result.secondOneOf_ = thirdThingBuilder_.build();
          }
        }
        if (secondOneOfCase_ == 8) {
          if (fourthThingBuilder_ == null) {
            result.secondOneOf_ = secondOneOf_;
          } else {
            result.secondOneOf_ = fourthThingBuilder_.build();
          }
        }
        if (secondOneOfCase_ == 9) {
          result.secondOneOf_ = secondOneOf_;
        }
        result.bitField0_ = to_bitField0_;
        result.firstOneOfCase_ = firstOneOfCase_;
        result.secondOneOfCase_ = secondOneOfCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean) {
          return mergeFrom((org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean other) {
        if (other == org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getItype() != 0) {
          setItype(other.getItype());
        }
        if (remoteTypesBuilder_ == null) {
          if (!other.remoteTypes_.isEmpty()) {
            if (remoteTypes_.isEmpty()) {
              remoteTypes_ = other.remoteTypes_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRemoteTypesIsMutable();
              remoteTypes_.addAll(other.remoteTypes_);
            }
            onChanged();
          }
        } else {
          if (!other.remoteTypes_.isEmpty()) {
            if (remoteTypesBuilder_.isEmpty()) {
              remoteTypesBuilder_.dispose();
              remoteTypesBuilder_ = null;
              remoteTypes_ = other.remoteTypes_;
              bitField0_ = (bitField0_ & ~0x00000004);
              remoteTypesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRemoteTypesFieldBuilder() : null;
            } else {
              remoteTypesBuilder_.addAllMessages(other.remoteTypes_);
            }
          }
        }
        if (localTypesBuilder_ == null) {
          if (!other.localTypes_.isEmpty()) {
            if (localTypes_.isEmpty()) {
              localTypes_ = other.localTypes_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureLocalTypesIsMutable();
              localTypes_.addAll(other.localTypes_);
            }
            onChanged();
          }
        } else {
          if (!other.localTypes_.isEmpty()) {
            if (localTypesBuilder_.isEmpty()) {
              localTypesBuilder_.dispose();
              localTypesBuilder_ = null;
              localTypes_ = other.localTypes_;
              bitField0_ = (bitField0_ & ~0x00000008);
              localTypesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLocalTypesFieldBuilder() : null;
            } else {
              localTypesBuilder_.addAllMessages(other.localTypes_);
            }
          }
        }
        switch (other.getFirstOneOfCase()) {
          case FIRST_THING: {
            mergeFirstThing(other.getFirstThing());
            break;
          }
          case SECOND_THING: {
            mergeSecondThing(other.getSecondThing());
            break;
          }
          case FIRSTONEOF_NOT_SET: {
            break;
          }
        }
        switch (other.getSecondOneOfCase()) {
          case THIRD_THING: {
            mergeThirdThing(other.getThirdThing());
            break;
          }
          case FOURTH_THING: {
            mergeFourthThing(other.getFourthThing());
            break;
          }
          case FIFTH_THING: {
            secondOneOfCase_ = 9;
            secondOneOf_ = other.secondOneOf_;
            onChanged();
            break;
          }
          case SECONDONEOF_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int firstOneOfCase_ = 0;
      private java.lang.Object firstOneOf_;
      public FirstOneOfCase
          getFirstOneOfCase() {
        return FirstOneOfCase.forNumber(
            firstOneOfCase_);
      }

      public Builder clearFirstOneOf() {
        firstOneOfCase_ = 0;
        firstOneOf_ = null;
        onChanged();
        return this;
      }

      private int secondOneOfCase_ = 0;
      private java.lang.Object secondOneOf_;
      public SecondOneOfCase
          getSecondOneOfCase() {
        return SecondOneOfCase.forNumber(
            secondOneOfCase_);
      }

      public Builder clearSecondOneOf() {
        secondOneOfCase_ = 0;
        secondOneOf_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * This is a multiline comment
       * wherein there are multiple lines
       * for this comment.  I will supply now a limerick
       * There was a young man so benighted
       * He never knew when he was slighted;
       * He would go to a party
       * And eat just as hearty,
       * As if he'd been really invited.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * This is a multiline comment
       * wherein there are multiple lines
       * for this comment.  I will supply now a limerick
       * There was a young man so benighted
       * He never knew when he was slighted;
       * He would go to a party
       * And eat just as hearty,
       * As if he'd been really invited.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * This is a multiline comment
       * wherein there are multiple lines
       * for this comment.  I will supply now a limerick
       * There was a young man so benighted
       * He never knew when he was slighted;
       * He would go to a party
       * And eat just as hearty,
       * As if he'd been really invited.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is a multiline comment
       * wherein there are multiple lines
       * for this comment.  I will supply now a limerick
       * There was a young man so benighted
       * He never knew when he was slighted;
       * He would go to a party
       * And eat just as hearty,
       * As if he'd been really invited.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {

        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is a multiline comment
       * wherein there are multiple lines
       * for this comment.  I will supply now a limerick
       * There was a young man so benighted
       * He never knew when he was slighted;
       * He would go to a party
       * And eat just as hearty,
       * As if he'd been really invited.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        name_ = value;
        onChanged();
        return this;
      }

      private int itype_ ;
      /**
       * <code>int32 itype = 2;</code>
       */
      public int getItype() {
        return itype_;
      }
      /**
       * <code>int32 itype = 2;</code>
       */
      public Builder setItype(int value) {

        itype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 itype = 2;</code>
       */
      public Builder clearItype() {

        itype_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2> remoteTypes_ =
        java.util.Collections.emptyList();
      private void ensureRemoteTypesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          remoteTypes_ = new java.util.ArrayList<org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2>(remoteTypes_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2, org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.Builder, org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2OrBuilder> remoteTypesBuilder_;

      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public java.util.List<org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2> getRemoteTypesList() {
        if (remoteTypesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(remoteTypes_);
        } else {
          return remoteTypesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public int getRemoteTypesCount() {
        if (remoteTypesBuilder_ == null) {
          return remoteTypes_.size();
        } else {
          return remoteTypesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2 getRemoteTypes(int index) {
        if (remoteTypesBuilder_ == null) {
          return remoteTypes_.get(index);
        } else {
          return remoteTypesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public Builder setRemoteTypes(
          int index, org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2 value) {
        if (remoteTypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemoteTypesIsMutable();
          remoteTypes_.set(index, value);
          onChanged();
        } else {
          remoteTypesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public Builder setRemoteTypes(
          int index, org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.Builder builderForValue) {
        if (remoteTypesBuilder_ == null) {
          ensureRemoteTypesIsMutable();
          remoteTypes_.set(index, builderForValue.build());
          onChanged();
        } else {
          remoteTypesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public Builder addRemoteTypes(org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2 value) {
        if (remoteTypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemoteTypesIsMutable();
          remoteTypes_.add(value);
          onChanged();
        } else {
          remoteTypesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public Builder addRemoteTypes(
          int index, org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2 value) {
        if (remoteTypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemoteTypesIsMutable();
          remoteTypes_.add(index, value);
          onChanged();
        } else {
          remoteTypesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public Builder addRemoteTypes(
          org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.Builder builderForValue) {
        if (remoteTypesBuilder_ == null) {
          ensureRemoteTypesIsMutable();
          remoteTypes_.add(builderForValue.build());
          onChanged();
        } else {
          remoteTypesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public Builder addRemoteTypes(
          int index, org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.Builder builderForValue) {
        if (remoteTypesBuilder_ == null) {
          ensureRemoteTypesIsMutable();
          remoteTypes_.add(index, builderForValue.build());
          onChanged();
        } else {
          remoteTypesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public Builder addAllRemoteTypes(
          java.lang.Iterable<? extends org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2> values) {
        if (remoteTypesBuilder_ == null) {
          ensureRemoteTypesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, remoteTypes_);
          onChanged();
        } else {
          remoteTypesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public Builder clearRemoteTypes() {
        if (remoteTypesBuilder_ == null) {
          remoteTypes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          remoteTypesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public Builder removeRemoteTypes(int index) {
        if (remoteTypesBuilder_ == null) {
          ensureRemoteTypesIsMutable();
          remoteTypes_.remove(index);
          onChanged();
        } else {
          remoteTypesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.Builder getRemoteTypesBuilder(
          int index) {
        return getRemoteTypesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2OrBuilder getRemoteTypesOrBuilder(
          int index) {
        if (remoteTypesBuilder_ == null) {
          return remoteTypes_.get(index);  } else {
          return remoteTypesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public java.util.List<? extends org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2OrBuilder>
           getRemoteTypesOrBuilderList() {
        if (remoteTypesBuilder_ != null) {
          return remoteTypesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(remoteTypes_);
        }
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.Builder addRemoteTypesBuilder() {
        return getRemoteTypesFieldBuilder().addBuilder(
            org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.getDefaultInstance());
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.Builder addRemoteTypesBuilder(
          int index) {
        return getRemoteTypesFieldBuilder().addBuilder(
            index, org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.getDefaultInstance());
      }
      /**
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2 remote_types = 3;</code>
       */
      public java.util.List<org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.Builder>
           getRemoteTypesBuilderList() {
        return getRemoteTypesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2, org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.Builder, org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2OrBuilder>
          getRemoteTypesFieldBuilder() {
        if (remoteTypesBuilder_ == null) {
          remoteTypesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2, org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2.Builder, org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.PBufPrecompileChild2OrBuilder>(
                  remoteTypes_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          remoteTypes_ = null;
        }
        return remoteTypesBuilder_;
      }

      private java.util.List<org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild> localTypes_ =
        java.util.Collections.emptyList();
      private void ensureLocalTypesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          localTypes_ = new java.util.ArrayList<org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild>(localTypes_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChildOrBuilder> localTypesBuilder_;

      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public java.util.List<org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild> getLocalTypesList() {
        if (localTypesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(localTypes_);
        } else {
          return localTypesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public int getLocalTypesCount() {
        if (localTypesBuilder_ == null) {
          return localTypes_.size();
        } else {
          return localTypesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild getLocalTypes(int index) {
        if (localTypesBuilder_ == null) {
          return localTypes_.get(index);
        } else {
          return localTypesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public Builder setLocalTypes(
          int index, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild value) {
        if (localTypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocalTypesIsMutable();
          localTypes_.set(index, value);
          onChanged();
        } else {
          localTypesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public Builder setLocalTypes(
          int index, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.Builder builderForValue) {
        if (localTypesBuilder_ == null) {
          ensureLocalTypesIsMutable();
          localTypes_.set(index, builderForValue.build());
          onChanged();
        } else {
          localTypesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public Builder addLocalTypes(org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild value) {
        if (localTypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocalTypesIsMutable();
          localTypes_.add(value);
          onChanged();
        } else {
          localTypesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public Builder addLocalTypes(
          int index, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild value) {
        if (localTypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocalTypesIsMutable();
          localTypes_.add(index, value);
          onChanged();
        } else {
          localTypesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public Builder addLocalTypes(
          org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.Builder builderForValue) {
        if (localTypesBuilder_ == null) {
          ensureLocalTypesIsMutable();
          localTypes_.add(builderForValue.build());
          onChanged();
        } else {
          localTypesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public Builder addLocalTypes(
          int index, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.Builder builderForValue) {
        if (localTypesBuilder_ == null) {
          ensureLocalTypesIsMutable();
          localTypes_.add(index, builderForValue.build());
          onChanged();
        } else {
          localTypesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public Builder addAllLocalTypes(
          java.lang.Iterable<? extends org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild> values) {
        if (localTypesBuilder_ == null) {
          ensureLocalTypesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, localTypes_);
          onChanged();
        } else {
          localTypesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public Builder clearLocalTypes() {
        if (localTypesBuilder_ == null) {
          localTypes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          localTypesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public Builder removeLocalTypes(int index) {
        if (localTypesBuilder_ == null) {
          ensureLocalTypesIsMutable();
          localTypes_.remove(index);
          onChanged();
        } else {
          localTypesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.Builder getLocalTypesBuilder(
          int index) {
        return getLocalTypesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChildOrBuilder getLocalTypesOrBuilder(
          int index) {
        if (localTypesBuilder_ == null) {
          return localTypes_.get(index);  } else {
          return localTypesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public java.util.List<? extends org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChildOrBuilder>
           getLocalTypesOrBuilderList() {
        if (localTypesBuilder_ != null) {
          return localTypesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(localTypes_);
        }
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.Builder addLocalTypesBuilder() {
        return getLocalTypesFieldBuilder().addBuilder(
            org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.getDefaultInstance());
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.Builder addLocalTypesBuilder(
          int index) {
        return getLocalTypesFieldBuilder().addBuilder(
            index, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.getDefaultInstance());
      }
      /**
       * <pre>
       * This is a single line comment
       * </pre>
       *
       * <code>repeated .org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChild local_types = 4;</code>
       */
      public java.util.List<org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.Builder>
           getLocalTypesBuilderList() {
        return getLocalTypesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChildOrBuilder>
          getLocalTypesFieldBuilder() {
        if (localTypesBuilder_ == null) {
          localTypesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChild.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.PBufPrecompileChildOrBuilder>(
                  localTypes_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          localTypes_ = null;
        }
        return localTypesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean, org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBeanOrBuilder> firstThingBuilder_;
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean first_thing = 5;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean getFirstThing() {
        if (firstThingBuilder_ == null) {
          if (firstOneOfCase_ == 5) {
            return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_;
          }
          return org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance();
        } else {
          if (firstOneOfCase_ == 5) {
            return firstThingBuilder_.getMessage();
          }
          return org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance();
        }
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean first_thing = 5;</code>
       */
      public Builder setFirstThing(org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean value) {
        if (firstThingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          firstOneOf_ = value;
          onChanged();
        } else {
          firstThingBuilder_.setMessage(value);
        }
        firstOneOfCase_ = 5;
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean first_thing = 5;</code>
       */
      public Builder setFirstThing(
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.Builder builderForValue) {
        if (firstThingBuilder_ == null) {
          firstOneOf_ = builderForValue.build();
          onChanged();
        } else {
          firstThingBuilder_.setMessage(builderForValue.build());
        }
        firstOneOfCase_ = 5;
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean first_thing = 5;</code>
       */
      public Builder mergeFirstThing(org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean value) {
        if (firstThingBuilder_ == null) {
          if (firstOneOfCase_ == 5 &&
              firstOneOf_ != org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance()) {
            firstOneOf_ = org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.newBuilder((org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_)
                .mergeFrom(value).buildPartial();
          } else {
            firstOneOf_ = value;
          }
          onChanged();
        } else {
          if (firstOneOfCase_ == 5) {
            firstThingBuilder_.mergeFrom(value);
          }
          firstThingBuilder_.setMessage(value);
        }
        firstOneOfCase_ = 5;
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean first_thing = 5;</code>
       */
      public Builder clearFirstThing() {
        if (firstThingBuilder_ == null) {
          if (firstOneOfCase_ == 5) {
            firstOneOfCase_ = 0;
            firstOneOf_ = null;
            onChanged();
          }
        } else {
          if (firstOneOfCase_ == 5) {
            firstOneOfCase_ = 0;
            firstOneOf_ = null;
          }
          firstThingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean first_thing = 5;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.Builder getFirstThingBuilder() {
        return getFirstThingFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean first_thing = 5;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBeanOrBuilder getFirstThingOrBuilder() {
        if ((firstOneOfCase_ == 5) && (firstThingBuilder_ != null)) {
          return firstThingBuilder_.getMessageOrBuilder();
        } else {
          if (firstOneOfCase_ == 5) {
            return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_;
          }
          return org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance();
        }
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean first_thing = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean, org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBeanOrBuilder>
          getFirstThingFieldBuilder() {
        if (firstThingBuilder_ == null) {
          if (!(firstOneOfCase_ == 5)) {
            firstOneOf_ = org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance();
          }
          firstThingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean, org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBeanOrBuilder>(
                  (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_,
                  getParentForChildren(),
                  isClean());
          firstOneOf_ = null;
        }
        firstOneOfCase_ = 5;
        onChanged();;
        return firstThingBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean, org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBeanOrBuilder> secondThingBuilder_;
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean second_thing = 6;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean getSecondThing() {
        if (secondThingBuilder_ == null) {
          if (firstOneOfCase_ == 6) {
            return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_;
          }
          return org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance();
        } else {
          if (firstOneOfCase_ == 6) {
            return secondThingBuilder_.getMessage();
          }
          return org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance();
        }
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean second_thing = 6;</code>
       */
      public Builder setSecondThing(org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean value) {
        if (secondThingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          firstOneOf_ = value;
          onChanged();
        } else {
          secondThingBuilder_.setMessage(value);
        }
        firstOneOfCase_ = 6;
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean second_thing = 6;</code>
       */
      public Builder setSecondThing(
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.Builder builderForValue) {
        if (secondThingBuilder_ == null) {
          firstOneOf_ = builderForValue.build();
          onChanged();
        } else {
          secondThingBuilder_.setMessage(builderForValue.build());
        }
        firstOneOfCase_ = 6;
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean second_thing = 6;</code>
       */
      public Builder mergeSecondThing(org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean value) {
        if (secondThingBuilder_ == null) {
          if (firstOneOfCase_ == 6 &&
              firstOneOf_ != org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance()) {
            firstOneOf_ = org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.newBuilder((org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_)
                .mergeFrom(value).buildPartial();
          } else {
            firstOneOf_ = value;
          }
          onChanged();
        } else {
          if (firstOneOfCase_ == 6) {
            secondThingBuilder_.mergeFrom(value);
          }
          secondThingBuilder_.setMessage(value);
        }
        firstOneOfCase_ = 6;
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean second_thing = 6;</code>
       */
      public Builder clearSecondThing() {
        if (secondThingBuilder_ == null) {
          if (firstOneOfCase_ == 6) {
            firstOneOfCase_ = 0;
            firstOneOf_ = null;
            onChanged();
          }
        } else {
          if (firstOneOfCase_ == 6) {
            firstOneOfCase_ = 0;
            firstOneOf_ = null;
          }
          secondThingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean second_thing = 6;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.Builder getSecondThingBuilder() {
        return getSecondThingFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean second_thing = 6;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBeanOrBuilder getSecondThingOrBuilder() {
        if ((firstOneOfCase_ == 6) && (secondThingBuilder_ != null)) {
          return secondThingBuilder_.getMessageOrBuilder();
        } else {
          if (firstOneOfCase_ == 6) {
            return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_;
          }
          return org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance();
        }
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingBean second_thing = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean, org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBeanOrBuilder>
          getSecondThingFieldBuilder() {
        if (secondThingBuilder_ == null) {
          if (!(firstOneOfCase_ == 6)) {
            firstOneOf_ = org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.getDefaultInstance();
          }
          secondThingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean, org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBeanOrBuilder>(
                  (org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.ThingBean) firstOneOf_,
                  getParentForChildren(),
                  isClean());
          firstOneOf_ = null;
        }
        firstOneOfCase_ = 6;
        onChanged();;
        return secondThingBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean, org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBeanOrBuilder> thirdThingBuilder_;
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBean third_thing = 7;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean getThirdThing() {
        if (thirdThingBuilder_ == null) {
          if (secondOneOfCase_ == 7) {
            return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean) secondOneOf_;
          }
          return org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.getDefaultInstance();
        } else {
          if (secondOneOfCase_ == 7) {
            return thirdThingBuilder_.getMessage();
          }
          return org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.getDefaultInstance();
        }
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBean third_thing = 7;</code>
       */
      public Builder setThirdThing(org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean value) {
        if (thirdThingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          secondOneOf_ = value;
          onChanged();
        } else {
          thirdThingBuilder_.setMessage(value);
        }
        secondOneOfCase_ = 7;
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBean third_thing = 7;</code>
       */
      public Builder setThirdThing(
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.Builder builderForValue) {
        if (thirdThingBuilder_ == null) {
          secondOneOf_ = builderForValue.build();
          onChanged();
        } else {
          thirdThingBuilder_.setMessage(builderForValue.build());
        }
        secondOneOfCase_ = 7;
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBean third_thing = 7;</code>
       */
      public Builder mergeThirdThing(org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean value) {
        if (thirdThingBuilder_ == null) {
          if (secondOneOfCase_ == 7 &&
              secondOneOf_ != org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.getDefaultInstance()) {
            secondOneOf_ = org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.newBuilder((org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean) secondOneOf_)
                .mergeFrom(value).buildPartial();
          } else {
            secondOneOf_ = value;
          }
          onChanged();
        } else {
          if (secondOneOfCase_ == 7) {
            thirdThingBuilder_.mergeFrom(value);
          }
          thirdThingBuilder_.setMessage(value);
        }
        secondOneOfCase_ = 7;
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBean third_thing = 7;</code>
       */
      public Builder clearThirdThing() {
        if (thirdThingBuilder_ == null) {
          if (secondOneOfCase_ == 7) {
            secondOneOfCase_ = 0;
            secondOneOf_ = null;
            onChanged();
          }
        } else {
          if (secondOneOfCase_ == 7) {
            secondOneOfCase_ = 0;
            secondOneOf_ = null;
          }
          thirdThingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBean third_thing = 7;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.Builder getThirdThingBuilder() {
        return getThirdThingFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBean third_thing = 7;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBeanOrBuilder getThirdThingOrBuilder() {
        if ((secondOneOfCase_ == 7) && (thirdThingBuilder_ != null)) {
          return thirdThingBuilder_.getMessageOrBuilder();
        } else {
          if (secondOneOfCase_ == 7) {
            return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean) secondOneOf_;
          }
          return org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.getDefaultInstance();
        }
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBean third_thing = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean, org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBeanOrBuilder>
          getThirdThingFieldBuilder() {
        if (thirdThingBuilder_ == null) {
          if (!(secondOneOfCase_ == 7)) {
            secondOneOf_ = org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.getDefaultInstance();
          }
          thirdThingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean, org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBeanOrBuilder>(
                  (org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.ThingOneBean) secondOneOf_,
                  getParentForChildren(),
                  isClean());
          secondOneOf_ = null;
        }
        secondOneOfCase_ = 7;
        onChanged();;
        return thirdThingBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean, org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBeanOrBuilder> fourthThingBuilder_;
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBean fourth_thing = 8;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean getFourthThing() {
        if (fourthThingBuilder_ == null) {
          if (secondOneOfCase_ == 8) {
            return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean) secondOneOf_;
          }
          return org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.getDefaultInstance();
        } else {
          if (secondOneOfCase_ == 8) {
            return fourthThingBuilder_.getMessage();
          }
          return org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.getDefaultInstance();
        }
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBean fourth_thing = 8;</code>
       */
      public Builder setFourthThing(org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean value) {
        if (fourthThingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          secondOneOf_ = value;
          onChanged();
        } else {
          fourthThingBuilder_.setMessage(value);
        }
        secondOneOfCase_ = 8;
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBean fourth_thing = 8;</code>
       */
      public Builder setFourthThing(
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.Builder builderForValue) {
        if (fourthThingBuilder_ == null) {
          secondOneOf_ = builderForValue.build();
          onChanged();
        } else {
          fourthThingBuilder_.setMessage(builderForValue.build());
        }
        secondOneOfCase_ = 8;
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBean fourth_thing = 8;</code>
       */
      public Builder mergeFourthThing(org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean value) {
        if (fourthThingBuilder_ == null) {
          if (secondOneOfCase_ == 8 &&
              secondOneOf_ != org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.getDefaultInstance()) {
            secondOneOf_ = org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.newBuilder((org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean) secondOneOf_)
                .mergeFrom(value).buildPartial();
          } else {
            secondOneOf_ = value;
          }
          onChanged();
        } else {
          if (secondOneOfCase_ == 8) {
            fourthThingBuilder_.mergeFrom(value);
          }
          fourthThingBuilder_.setMessage(value);
        }
        secondOneOfCase_ = 8;
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBean fourth_thing = 8;</code>
       */
      public Builder clearFourthThing() {
        if (fourthThingBuilder_ == null) {
          if (secondOneOfCase_ == 8) {
            secondOneOfCase_ = 0;
            secondOneOf_ = null;
            onChanged();
          }
        } else {
          if (secondOneOfCase_ == 8) {
            secondOneOfCase_ = 0;
            secondOneOf_ = null;
          }
          fourthThingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBean fourth_thing = 8;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.Builder getFourthThingBuilder() {
        return getFourthThingFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBean fourth_thing = 8;</code>
       */
      public org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBeanOrBuilder getFourthThingOrBuilder() {
        if ((secondOneOfCase_ == 8) && (fourthThingBuilder_ != null)) {
          return fourthThingBuilder_.getMessageOrBuilder();
        } else {
          if (secondOneOfCase_ == 8) {
            return (org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean) secondOneOf_;
          }
          return org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.getDefaultInstance();
        }
      }
      /**
       * <code>.org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBean fourth_thing = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean, org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBeanOrBuilder>
          getFourthThingFieldBuilder() {
        if (fourthThingBuilder_ == null) {
          if (!(secondOneOfCase_ == 8)) {
            secondOneOf_ = org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.getDefaultInstance();
          }
          fourthThingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean, org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean.Builder, org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBeanOrBuilder>(
                  (org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.ThingTwoBean) secondOneOf_,
                  getParentForChildren(),
                  isClean());
          secondOneOf_ = null;
        }
        secondOneOfCase_ = 8;
        onChanged();;
        return fourthThingBuilder_;
      }

      /**
       * <code>string fifth_thing = 9;</code>
       */
      public java.lang.String getFifthThing() {
        java.lang.Object ref = "";
        if (secondOneOfCase_ == 9) {
          ref = secondOneOf_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (secondOneOfCase_ == 9) {
            secondOneOf_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fifth_thing = 9;</code>
       */
      public com.google.protobuf.ByteString
          getFifthThingBytes() {
        java.lang.Object ref = "";
        if (secondOneOfCase_ == 9) {
          ref = secondOneOf_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (secondOneOfCase_ == 9) {
            secondOneOf_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fifth_thing = 9;</code>
       */
      public Builder setFifthThing(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  secondOneOfCase_ = 9;
        secondOneOf_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string fifth_thing = 9;</code>
       */
      public Builder clearFifthThing() {
        if (secondOneOfCase_ == 9) {
          secondOneOfCase_ = 0;
          secondOneOf_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string fifth_thing = 9;</code>
       */
      public Builder setFifthThingBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        secondOneOfCase_ = 9;
        secondOneOf_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBean)
    }

    // @@protoc_insertion_point(class_scope:org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBean)
    private static final org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean();
    }

    public static org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PBufPrecompileRootBean>
        PARSER = new com.google.protobuf.AbstractParser<PBufPrecompileRootBean>() {
      public PBufPrecompileRootBean parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PBufPrecompileRootBean(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PBufPrecompileRootBean> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PBufPrecompileRootBean> getParserForType() {
      return PARSER;
    }

    public org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileRootBeanOuterClass.PBufPrecompileRootBean getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glassfish_hk2_xml_test_pbuf_pc1_PBufPrecompileRootBean_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_glassfish_hk2_xml_test_pbuf_pc1_PBufPrecompileRootBean_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n@org/glassfish/hk2/xml/test/pbuf/pc1/PB" +
      "ufPrecompileRootBean.proto\022#org.glassfis" +
      "h.hk2.xml.test.pbuf.pc1\032=org/glassfish/h" +
      "k2/xml/test/pbuf/pc1/PBufPrecompileChild" +
      ".proto\032>org/glassfish/hk2/xml/test/pbuf/" +
      "pc2/PBufPrecompileChild2.proto\0323org/glas" +
      "sfish/hk2/xml/test/pbuf/pc1/ThingBean.pr" +
      "oto\0326org/glassfish/hk2/xml/test/pbuf/pc1" +
      "/ThingOneBean.proto\0326org/glassfish/hk2/x" +
      "ml/test/pbuf/pc1/ThingTwoBean.proto\"\255\004\n\026",
      "PBufPrecompileRootBean\022\014\n\004name\030\001 \001(\t\022\r\n\005" +
      "itype\030\002 \001(\005\022O\n\014remote_types\030\003 \003(\01329.org." +
      "glassfish.hk2.xml.test.pbuf.pc2.PBufPrec" +
      "ompileChild2\022M\n\013local_types\030\004 \003(\01328.org." +
      "glassfish.hk2.xml.test.pbuf.pc1.PBufPrec" +
      "ompileChild\022E\n\013first_thing\030\005 \001(\0132..org.g" +
      "lassfish.hk2.xml.test.pbuf.pc1.ThingBean" +
      "H\000\022F\n\014second_thing\030\006 \001(\0132..org.glassfish" +
      ".hk2.xml.test.pbuf.pc1.ThingBeanH\000\022H\n\013th" +
      "ird_thing\030\007 \001(\01321.org.glassfish.hk2.xml.",
      "test.pbuf.pc1.ThingOneBeanH\001\022I\n\014fourth_t" +
      "hing\030\010 \001(\01321.org.glassfish.hk2.xml.test." +
      "pbuf.pc1.ThingTwoBeanH\001\022\025\n\013fifth_thing\030\t" +
      " \001(\tH\001B\014\n\nFirstOneOfB\r\n\013SecondOneOfb\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.getDescriptor(),
          org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.getDescriptor(),
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.getDescriptor(),
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.getDescriptor(),
          org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.getDescriptor(),
        }, assigner);
    internal_static_org_glassfish_hk2_xml_test_pbuf_pc1_PBufPrecompileRootBean_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_glassfish_hk2_xml_test_pbuf_pc1_PBufPrecompileRootBean_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_glassfish_hk2_xml_test_pbuf_pc1_PBufPrecompileRootBean_descriptor,
        new java.lang.String[] { "Name", "Itype", "RemoteTypes", "LocalTypes", "FirstThing", "SecondThing", "ThirdThing", "FourthThing", "FifthThing", "FirstOneOf", "SecondOneOf", });
    org.glassfish.hk2.xml.test.pbuf.pc1.PBufPrecompileChildOuterClass.getDescriptor();
    org.glassfish.hk2.xml.test.pbuf.pc2.PBufPrecompileChild2OuterClass.getDescriptor();
    org.glassfish.hk2.xml.test.pbuf.pc1.ThingBeanOuterClass.getDescriptor();
    org.glassfish.hk2.xml.test.pbuf.pc1.ThingOneBeanOuterClass.getDescriptor();
    org.glassfish.hk2.xml.test.pbuf.pc1.ThingTwoBeanOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
