name: CI

on:
  push:
    branches:
      - main
      - 'releases/*'
  pull_request:
    branches:
      - '*'

env:
  ORG_GRADLE_PROJECT_junitBuildCacheUsername: ${{ secrets.BUILD_CACHE_USERNAME }}
  ORG_GRADLE_PROJECT_junitBuildCachePassword: ${{ secrets.BUILD_CACHE_PASSWORD }}

jobs:
  linux:
    name: 'Linux'
    runs-on: ubuntu-latest
    container: junitteam/build:latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache Gradle wrapper and dependencies
      uses: actions/cache@v2
      with:
        path: | 
          /root/.gradle/caches/
          /root/.gradle/wrapper/dists
        key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
        restore-keys: |
          test-${{ runner.os }}-gradle-
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: /root/.m2/repository
        key: test-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          test-${{ runner.os }}-maven-
    - name: Prepare Gradle Enterprise credentials
      run: |
        mkdir -p /root/.gradle/enterprise/
        echo "${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}" > /root/.gradle/enterprise/keys.properties
    - name: 'Test'
      run: |
        ./gradlew --version
        ./gradlew --scan --no-parallel --warning-mode=all -Dplatform.tooling.support.tests.enabled=true build

  windows:
    name: 'Windows'
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache Gradle wrapper and dependencies
      uses: actions/cache@v2
      with:
        path: | 
          ~/.gradle/caches/
          ~/.gradle/wrapper/dists
        key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
        restore-keys: |
          test-${{ runner.os }}-gradle-
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: test-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          test-${{ runner.os }}-maven-
    - name: 'Set up JDK 11'
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Prepare Gradle Enterprise credentials
      shell: bash
      run: |
        mkdir -p $HOME/.gradle/enterprise/
        echo "${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}" > $HOME/.gradle/enterprise/keys.properties
    - name: 'Test'
      shell: bash
      run: |
        ./gradlew --version
        ./gradlew --scan --no-parallel --warning-mode=all -Dplatform.tooling.support.tests.enabled=true build
        ./gradlew --stop
  mac:
    name: 'Mac OS'
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache Gradle wrapper and dependencies
      uses: actions/cache@v2
      with:
        path: | 
          ~/.gradle/caches/
          ~/.gradle/wrapper/dists
        key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
        restore-keys: |
          test-${{ runner.os }}-gradle-
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: test-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          test-${{ runner.os }}-maven-
    - name: 'Set up JDK 11'
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Prepare Gradle Enterprise credentials
      run: |
        mkdir -p $HOME/.gradle/enterprise/
        echo "${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}" > $HOME/.gradle/enterprise/keys.properties
    - name: 'Test'
      run: |
        ./gradlew --version
        ./gradlew --scan --no-parallel --warning-mode=all -Dplatform.tooling.support.tests.enabled=true build

  coverage:
    name: 'Coverage'
    needs: linux
    runs-on: ubuntu-latest
    container: junitteam/build:latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache Gradle wrapper and dependencies
      uses: actions/cache@v2
      with:
        path: | 
          /root/.gradle/caches/
          /root/.gradle/wrapper/dists
        key: coverage-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
        restore-keys: |
          coverage-${{ runner.os }}-gradle-
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: /root/.m2/repository
        key: coverage-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          coverage-${{ runner.os }}-maven-
    - name: 'Set up JDK 11'
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Prepare Gradle Enterprise credentials
      run: |
        mkdir -p /root/.gradle/enterprise/
        echo "${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}" > /root/.gradle/enterprise/keys.properties
    - name: 'Run tests with JaCoCo'
      shell: bash
      run: |
        ./gradlew --version
        ./gradlew --scan --no-parallel --stacktrace --warning-mode=all -PenableJaCoCo build jacocoRootReport
    - name: Upload to Codecov.io
      shell: bash
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        bash <(curl -s https://codecov.io/bash)

  publish_artifacts:
    name: Publish Snapshot Artifacts
    needs: linux
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'junit-team/junit5' && (startsWith(github.ref, 'refs/heads/releases/') || github.ref == 'refs/heads/main')
    steps:
    - uses: actions/checkout@v2
    - name: Cache Gradle wrapper and dependencies
      uses: actions/cache@v2
      with:
        path: | 
          ~/.gradle/caches/
          ~/.gradle/wrapper/dists
        key: assemble-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
        restore-keys: |
          assemble-${{ runner.os }}-gradle-
    - name: 'Set up JDK 11'
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: 'Publish'
      env:
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      run: ./gradlew --scan publish -x check

  update_documentation:
    name: Update Snapshot Documentation
    needs: linux
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'junit-team/junit5' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - name: Cache Gradle wrapper and dependencies
      uses: actions/cache@v2
      with:
        path: | 
          ~/.gradle/caches/
          ~/.gradle/wrapper/dists
        key: assemble-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
        restore-keys: |
          assemble-${{ runner.os }}-gradle-
    - name: 'Set up JDK 11'
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: 'Upload Documentation'
      env:
        GRGIT_USER: ${{ secrets.GH_TOKEN }}
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      run: |
        sudo apt-get install graphviz
        ./src/publishDocumentationSnapshotOnlyIfNecessary.sh
